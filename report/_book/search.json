[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "STAT468 Final Project Report",
    "section": "",
    "text": "1 Abstract\npppeeepppooo",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Abstract</span>"
    ]
  },
  {
    "objectID": "01-question.html",
    "href": "01-question.html",
    "title": "2  Question of Interest and Relevance",
    "section": "",
    "text": "hi",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Question of Interest and Relevance</span>"
    ]
  },
  {
    "objectID": "02-import.html",
    "href": "02-import.html",
    "title": "3  Import",
    "section": "",
    "text": "hi",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Import</span>"
    ]
  },
  {
    "objectID": "03-tidy.html",
    "href": "03-tidy.html",
    "title": "4  Tidy",
    "section": "",
    "text": "hi",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Tidy</span>"
    ]
  },
  {
    "objectID": "04-transform.html",
    "href": "04-transform.html",
    "title": "5  Transform",
    "section": "",
    "text": "hi",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Transform</span>"
    ]
  },
  {
    "objectID": "05-visualize.html",
    "href": "05-visualize.html",
    "title": "6  Visualize",
    "section": "",
    "text": "Code\nlibrary(dplyr)\n\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\n\nCode\nlibrary(ggplot2)\nlibrary(gt)\nlibrary(lubridate)\n\n\n\nAttaching package: 'lubridate'\n\n\nThe following objects are masked from 'package:base':\n\n    date, intersect, setdiff, union\n\n\nCode\nlibrary(forcats) \n\nmatches_metadata &lt;- \n  readr::read_csv(\"../cleaned data/matches_metadata.csv\", \n                  show_col_types = FALSE) \nset_data &lt;- \n  readr::read_csv(\"../cleaned data/set_data.csv\", \n                  show_col_types = FALSE) \n\ncourt_coordinates &lt;- \n  readr::read_csv(\"../cleaned data/court_coordinates.csv\", \n                  show_col_types = FALSE) \nrally_data &lt;- \n  readr::read_csv(\"../cleaned data/rally_data.csv\",\n                  show_col_types = FALSE)\n\n\n\n\nCode\ntable_1 &lt;- set_data |&gt; \n  left_join(matches_metadata |&gt; \n              select(match_id, tournament, round, year, \n                     winner, loser), by = \"match_id\") |&gt;\n  rename(\n    match_winner = winner,\n    match_loser = loser\n  ) |&gt;\n  mutate(\n    set_loser = if_else(set_winner == match_winner, \n                        match_loser, match_winner),\n    set_winner_points = if_else(set_winner == \"CHOU Tien Chen\",\n                            chou_score, opp_score),\n    set_loser_points = if_else(set_loser == \"CHOU Tien Chen\", \n                           chou_score, opp_score)\n  ) |&gt; \n  select(-chou_score,-opp_score) |&gt;\n  arrange(year) \n\ntable_1 &lt;- table_1 |&gt;\n  mutate(\n    match_label = paste0(\n      tournament, \" / \", round, \" / \", year, \" / \", match_winner, \"* vs \", match_loser\n    ),\n    set_score = paste0(set_winner_points, \" - \", set_loser_points, \n                   \" (\", abs(set_winner_points - set_loser_points), \")\"),\n    set_label = paste0(\"Set \", set)\n  )\n\ntable_1 |&gt;\n  select(\n    match_label, set_label, set_winner, set_loser, set_score\n  ) |&gt;\n  gt(groupname_col = \"match_label\") |&gt;\n  cols_label(\n    set_label = \"\", \n    set_winner = \"\", \n    set_loser = \"\", \n    set_score = \"\"\n  ) |&gt;\n  tab_options(\n    table.background.color = \"#f9f9f9\",\n    table.border.top.style = \"none\",\n    table.border.bottom.style = \"none\",\n    heading.border.bottom.style = \"none\",\n    column_labels.border.top.style = \"none\",\n    column_labels.border.bottom.style = \"none\",\n    row.striping.include_table_body = FALSE\n  ) |&gt;\n  cols_align(\n    align = \"left\",\n    columns = c(set_label, set_winner, set_loser, set_score)\n  ) |&gt;\n  tab_style(\n    style = cell_text(indent = px(20)),\n    locations = cells_body(columns = set_label)\n  ) |&gt;\n  tab_style(\n    style = list(cell_fill(color = \"#E4F2D5\")),\n    locations = cells_body(columns = set_winner,\n                           rows = set_winner == \"CHOU Tien Chen\")\n  ) |&gt;\n  tab_style(\n    style = list(cell_fill(color = \"#FFCCCB\")),\n    locations = cells_body(columns = set_loser,\n                           rows = set_loser == \"CHOU Tien Chen\")\n  ) |&gt;\n  tab_source_note(\n    md(\"**Notes**: An asterisk (*) next to a player's name in the header indicates the match winner. \n    \n    \n    The table displays each set’s number, set winner and loser, and final score with the point difference in parentheses.\n    \n    \n    Green highlights indicate sets won by CHOU Tien Chen and red highlights indicate sets lost by him.\")\n  )|&gt; \n  opt_stylize(style = 6, color = 'gray')\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFuzhou Open 2018 / Finals / 2018 / Kento MOMOTA* vs CHOU Tien Chen\n\n\nSet 1\nKento MOMOTA\nCHOU Tien Chen\n21 - 13 (8)\n\n\nSet 2\nCHOU Tien Chen\nKento MOMOTA\n21 - 11 (10)\n\n\nSet 3\nKento MOMOTA\nCHOU Tien Chen\n21 - 16 (5)\n\n\nDenmark Open 2018 / Finals / 2018 / Kento MOMOTA* vs CHOU Tien Chen\n\n\nSet 1\nKento MOMOTA\nCHOU Tien Chen\n22 - 20 (2)\n\n\nSet 2\nCHOU Tien Chen\nKento MOMOTA\n21 - 16 (5)\n\n\nSet 3\nKento MOMOTA\nCHOU Tien Chen\n21 - 15 (6)\n\n\nMalaysia Open 2018 / Quarter-finals / 2018 / Kento MOMOTA* vs CHOU Tien Chen\n\n\nSet 1\nKento MOMOTA\nCHOU Tien Chen\n21 - 19 (2)\n\n\nSet 2\nKento MOMOTA\nCHOU Tien Chen\n21 - 11 (10)\n\n\nFuzhou Open 2019 / Finals / 2019 / Kento MOMOTA* vs CHOU Tien Chen\n\n\nSet 1\nKento MOMOTA\nCHOU Tien Chen\n21 - 15 (6)\n\n\nSet 2\nCHOU Tien Chen\nKento MOMOTA\n21 - 17 (4)\n\n\nSet 3\nKento MOMOTA\nCHOU Tien Chen\n21 - 18 (3)\n\n\nWorld Tour Finals / Group-Stage / 2019 / CHEN Long* vs CHOU Tien Chen\n\n\nSet 1\nCHEN Long\nCHOU Tien Chen\n21 - 15 (6)\n\n\nSet 2\nCHEN Long\nCHOU Tien Chen\n21 - 19 (2)\n\n\nKOREA OPEN 2019 / Finals / 2019 / Kento MOMOTA* vs CHOU Tien Chen\n\n\nSet 1\nKento MOMOTA\nCHOU Tien Chen\n21 - 19 (2)\n\n\nSet 2\nKento MOMOTA\nCHOU Tien Chen\n21 - 17 (4)\n\n\nDenmark Open 2019 / Quarter-finals / 2019 / CHEN Long* vs CHOU Tien Chen\n\n\nSet 1\nCHEN Long\nCHOU Tien Chen\n21 - 17 (4)\n\n\nSet 2\nCHEN Long\nCHOU Tien Chen\n21 - 17 (4)\n\n\nFuzhou Open 2019 / Semi-finals / 2019 / CHOU Tien Chen* vs Anders ANTONSEN\n\n\nSet 1\nCHOU Tien Chen\nAnders ANTONSEN\n21 - 10 (11)\n\n\nSet 2\nCHOU Tien Chen\nAnders ANTONSEN\n21 - 12 (9)\n\n\nSudirman Cup 2019 / Quarter-finals / 2019 / CHOU Tien Chen* vs Jonatan CHRISTIE\n\n\nSet 1\nCHOU Tien Chen\nJonatan CHRISTIE\n21 - 11 (10)\n\n\nSet 2\nCHOU Tien Chen\nJonatan CHRISTIE\n21 - 13 (8)\n\n\nSudirman Cup 2019 / Group-Stage / 2019 / CHOU Tien Chen* vs NG Ka Long Angus\n\n\nSet 1\nCHOU Tien Chen\nNG Ka Long Angus\n21 - 15 (6)\n\n\nSet 2\nCHOU Tien Chen\nNG Ka Long Angus\n21 - 15 (6)\n\n\nIndonesia Open 2019 / Quarter-finals / 2019 / CHOU Tien Chen* vs Jonatan CHRISTIE\n\n\nSet 1\nJonatan CHRISTIE\nCHOU Tien Chen\n21 - 16 (5)\n\n\nSet 2\nCHOU Tien Chen\nJonatan CHRISTIE\n21 - 18 (3)\n\n\nSet 3\nCHOU Tien Chen\nJonatan CHRISTIE\n21 - 14 (7)\n\n\n\n\n\nNotes: An asterisk (*) next to a player’s name in the header indicates the match winner.\n\nThe table displays each set’s number, set winner and loser, and final score with the point difference in parentheses.\n\n\nGreen highlights indicate sets won by CHOU Tien Chen and red highlights indicate sets lost by him.\n\n\n\n\n\n\n\n\n\n\n\nCode\ntable_2 &lt;- matches_metadata |&gt; \n  summarise(\n    matches_played = n(),\n    matches_won = sum(winner == \"CHOU Tien Chen\"),\n    matches_summary = paste(matches_won,\"/\",matches_played)\n  )\n\ntable_2 |&gt;\n  select(matches_summary) |&gt;\n  gt() |&gt;\n  cols_label(\n    matches_summary = \"Matches Won\"\n  ) |&gt;\n  tab_options(\n    table.background.color = \"#E5E4E2\"\n  ) |&gt;\n  tab_style(\n    style = cell_text(align = \"center\"),\n    locations = cells_body()\n  ) |&gt; \n  opt_stylize(style = 6, color = 'gray')\n\n\n\n\n\n\n\n\nMatches Won\n\n\n\n\n4 / 11\n\n\n\n\n\n\n\n\n\nCode\nrally_lengths &lt;- rally_data |&gt;\n  filter(!is.na(rally_winner)) |&gt;\n  group_by(match_id, set, rally) |&gt;\n  slice_tail(n = 1) |&gt;\n  summarise(\n    rally_length = max(stroke),\n    rally_winner = rally_winner,\n    .groups = \"drop\"\n  )|&gt;\n  mutate(\n    chou_result = if_else(\n      rally_winner == \"CHOU Tien Chen\", \n      \"Win\", \n      \"Loss\"\n    )\n  )\n\nmean_length &lt;- mean(rally_lengths$rally_length, na.rm = TRUE)\nsd_length &lt;- sd(rally_lengths$rally_length, na.rm = TRUE)\n\nrally_lengths |&gt;\n  summarise(\n    count = n(),\n    mean = mean(rally_length),\n    sd = sd(rally_length),\n    min = min(rally_length),\n    Q1 = quantile(rally_length, 0.25),\n    median = median(rally_length),\n    Q3 = quantile(rally_length, 0.75),\n    max = max(rally_length)\n  ) |&gt;\n  gt() |&gt;\n  fmt_number(columns = everything(), decimals = 0) |&gt;\n  cols_label(\n    count = \"No. of rallies\",\n    mean = \"Mean\",\n    sd = \"Standard deviation\",\n    min = \"Minimum\",\n    Q1 = \"Q1\",\n    median = \"Median\",\n    Q3 = \"Q3\",\n    max = \"Maximum\"\n  ) |&gt;\n  cols_align(align = \"center\", columns = everything()) |&gt; \n  tab_style(                                              \n    style = cell_text(align = \"center\"),\n    locations = cells_column_labels(columns = everything())\n  ) |&gt;\n  tab_options(\n    data_row.padding = px(6),\n    column_labels.padding = px(10),\n    table.width = pct(100)\n  ) |&gt;\n  opt_stylize(style = 6, color = \"gray\")\n\n\n\n\n\n\n\n\nNo. of rallies\nMean\nStandard deviation\nMinimum\nQ1\nMedian\nQ3\nMaximum\n\n\n\n\n920\n12\n9\n1\n5\n10\n15\n48\n\n\n\n\n\n\n\nCode\nggplot(rally_lengths, aes(x = rally_length)) +\n  geom_histogram(binwidth = 1, \n                 fill = \"#A3D1FF\", color = \"white\") +\n  geom_vline(aes(xintercept = mean_length), \n             color = \"black\", linetype = \"solid\", \n             size = 0.1) +\n  geom_vline(aes(xintercept = mean_length + sd_length), \n             color = \"black\", linetype = \"dashed\", \n             size = 0.1) +\n  geom_vline(aes(xintercept = mean_length - sd_length), \n             color = \"black\", linetype = \"dashed\", \n             size = 0.1) +\n  labs(\n    title = \"Distribution of Rally Lengths\",\n    x = \"Number of Strokes in a Rally\",\n    y = \"Frequency\"\n  ) +\n  theme_minimal()\n\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n\n\n\n\n\n\n\nCode\nggplot(rally_lengths, \n       aes(rally_length, fill = chou_result)) +\n  geom_histogram(binwidth = 3, color = \"white\")  +\n  scale_fill_manual(\n    values = c(\"Win\" = \"#CDECCB\", \"Loss\" = \"#FFB3B3\"),\n    name = \"CHOU Tien Chen\"\n  ) +\n  labs(\n    title = \"Rally Length Distribution by CHOU Tien Chen's Wins and Losses\",\n    x = \"Number of Strokes in a Rally\",\n    y = \"Frequency\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n\nCode\nchou_shots &lt;- rally_data |&gt;\n  filter(current_player == \"CHOU Tien Chen\") |&gt;\n  group_by(match_id, set, rally) |&gt;\n  mutate(\n    last_by_chou = row_number() == max(row_number())) |&gt;\n  filter(last_by_chou) |&gt;\n  select(match_id, set, rally, shot_type, rally_winner)|&gt;\n  filter(!is.na(rally_winner)) |&gt;\n  mutate(won_point = if_else(rally_winner == \"CHOU Tien Chen\", 1, 0)) |&gt;\n  group_by(shot_type) |&gt;\n  summarise(\n    total = n(),\n    points_won = sum(won_point),\n    .groups = \"drop\"\n  ) |&gt;\n  ungroup()\n  \nggplot(chou_shots, aes(x = fct_reorder(shot_type, total), y = total, fill = points_won)) +\n  geom_col() +\n  coord_flip() +\n  scale_fill_gradient(low = \"#FFB3B3\", high = \"#CDECCB\", name = \"Points Won\") +\n  labs(\n    title = \"CHOU Tien Chen’s Shot Types and Their Success\",\n    x = \"Shot Type\",\n    y = \"Number of Times Used\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n\nCode\nwinning_shots &lt;- rally_data |&gt;\n  filter(current_player == \"CHOU Tien Chen\") |&gt;\n  group_by(match_id, set, rally) |&gt;\n  slice_tail(n = 1) |&gt;\n  filter(rally_winner == \"CHOU Tien Chen\") |&gt;\n  select(match_id, set, rally, shot_type) |&gt;\n  ungroup() |&gt;\n  count(shot_type, name = \"chou_wins\")\n\nggplot(winning_shots, aes(x = fct_reorder(shot_type, chou_wins), y = chou_wins)) +\n  geom_col(fill = \"#CDECCB\") +\n  coord_flip() +\n  labs(\n    title = \"CHOU Tien Chen’s Winning Shots\",\n    x = \"Shot Type\",\n    y = \"Rallies Won by CHOU\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n\nCode\nwinning_shots_hand &lt;- rally_data |&gt;\n  filter(current_player == \"CHOU Tien Chen\") |&gt;\n  group_by(match_id, set, rally) |&gt;\n  slice_tail(n = 1) |&gt;\n  filter(rally_winner == \"CHOU Tien Chen\") |&gt;\n  select(match_id, set, rally, shot_type, backhand) |&gt;\n  mutate(hand = if_else(backhand == 1, \"Backhand\", \"Fronthand\")) |&gt;\n  ungroup() |&gt;\n  count(shot_type, hand)\n\nggplot(winning_shots_hand, aes(x = fct_reorder(shot_type, n, sum), y = n, fill = hand)) +\n  geom_col() +\n  coord_flip() +\n  scale_fill_manual(values = c(\"Fronthand\" = \"#A3D1FF\", \"Backhand\" = \"#2A7BC4\")) +\n  labs(\n    title = \"CHOU Tien Chen’s Winning Shots by Hand Used\",\n    x = \"Shot Type\",\n    y = \"Rallies Won\",\n    fill = \"Hand Used\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\nCode\nrally_data |&gt;\n  filter(current_player == \"CHOU Tien Chen\") |&gt;\n  select(match_id, set, rally, backhand, rally_winner) |&gt;\n  group_by(match_id, set, rally) |&gt;\n  slice_tail(n = 1) |&gt;\n  filter(!is.na(rally_winner)) |&gt;\n  mutate(\n    hand = if_else(backhand == 1, \"Backhand\", \"Fronthand\"),\n    point_won = rally_winner == \"CHOU Tien Chen\"\n  ) |&gt;\n  group_by(hand) |&gt;\n  summarise(\n    total = n(),\n    points_won = sum(point_won),\n    pct_won = round(100 * points_won / total, 1),\n    .groups = \"drop\"\n  ) |&gt;\n  gt() |&gt;\n  fmt_number(columns = c(total, points_won), decimals = 0) |&gt;\n  fmt_percent(columns = pct_won, scale_values = FALSE, decimals = 0) |&gt;\n  cols_label(\n    hand = \"Hand\",\n    total = \"Total Shots\",\n    points_won = \"Total Points\",\n    pct_won = \"% Shots Scored\"\n  ) |&gt;\n  cols_align(align = \"center\", columns = everything()) |&gt; \n  tab_style(                                              \n    style = cell_text(align = \"center\"),\n    locations = cells_column_labels(columns = everything())\n  ) |&gt;\n  tab_options(\n    data_row.padding = px(6),\n    column_labels.padding = px(10),\n    table.width = pct(100)\n  ) |&gt;\n  opt_stylize(style = 6, color = \"gray\")\n\n\n\n\n\n\n\n\nHand\nTotal Shots\nTotal Points\n% Shots Scored\n\n\n\n\nBackhand\n160\n26\n16%\n\n\nFronthand\n329\n165\n50%\n\n\n\n\n\n\n\n\n\nCode\nloosing_shots &lt;- rally_data |&gt;\n  filter(current_player != \"CHOU Tien Chen\") |&gt;\n  group_by(match_id, set, rally) |&gt;\n  slice_tail(n = 1) |&gt;\n  filter(rally_winner != \"CHOU Tien Chen\") |&gt;\n  select(match_id, set, rally, shot_type) |&gt;\n  ungroup() |&gt;  \n  count(shot_type, name = \"chou_losses\")\n  \nggplot(loosing_shots, aes(x = fct_reorder(shot_type, chou_losses), y = chou_losses)) +\n  geom_col(fill = \"#FFB3B3\") +\n  coord_flip() +\n  labs(\n    title = \"Opponent Shots That Led to CHOU Tien Chen Losing\",\n    x = \"Shot Type\",\n    y = \"Rallies Lost by CHOU\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n\nCode\nshuttle_points &lt;- rally_data |&gt;\n  filter(!is.na(shuttle_x), !is.na(shuttle_y))|&gt;\n  count(shuttle_x, shuttle_y, name = \"freq\") \n\n# Court polygon\ncourt_df &lt;- tibble(\n  x = c(\n    court_coordinates$upleft_x,\n    court_coordinates$upright_x,\n    court_coordinates$downright_x,\n    court_coordinates$downleft_x\n  ),\n  y = c(\n    court_coordinates$upleft_y,\n    court_coordinates$upright_y,\n    court_coordinates$downright_y,\n    court_coordinates$downleft_y\n  )\n)\n\n# Net line\nnet_y &lt;- (court_coordinates$upleft_y + court_coordinates$downleft_y) / 2\n\nnet_df &lt;- tibble(\n  x = c(court_coordinates$upleft_x, court_coordinates$upright_x),\n  y = c(net_y, net_y)\n)\n\n# Plot court with points\nggplot() +\n  geom_polygon(data = court_df, aes(x = x, y = y), fill = \"white\", color = \"black\") +\n  geom_line(data = net_df, aes(x = x, y = y), color = \"red\", linetype = \"solid\", linewidth = 1) +\n  geom_point(\n    data = shuttle_points,\n    aes(x = shuttle_x, y = shuttle_y, size = freq, alpha = freq),\n    color = \"#2A7BC4\"\n  ) +\n  scale_size_continuous(range = c(1, 6), guide = \"none\") +\n  scale_alpha_continuous(range = c(0.2, 0.9), guide = \"none\") +\n  coord_fixed() +\n  labs(\n    title = \"Shuttle Landing Points\",\n    subtitle = \"Point size and transparency reflect frequency\",\n    x = NULL,\n    y = NULL\n  ) +\n  theme_minimal() +\n  theme(\n    axis.text = element_blank(),\n    axis.title = element_blank(),\n    panel.grid = element_blank()\n  )\n\n\n\n\n\n\n\n\n\nCode\nchou_shots_win &lt;- rally_data |&gt;\n  filter(current_player == \"CHOU Tien Chen\") |&gt;\n  filter(!is.na(shuttle_x), !is.na(shuttle_y), !is.na(chou_y), !is.na(rally_winner)) |&gt;\n  group_by(match_id, set, rally) |&gt;\n  slice_tail(n = 1) |&gt;\n  mutate(\n    point_outcome = if_else(rally_winner == \"CHOU Tien Chen\", \"Win\", \"No Point\"),\n    shuttle_y_mirrored = if_else(chou_y &lt; net_y, 2 * net_y - shuttle_y, shuttle_y),\n    shuttle_x_mirrored = shuttle_x  # &lt;- this line is corrected\n  ) |&gt;\n  filter(point_outcome == \"Win\")\n\n\nggplot() +\n  geom_polygon(data = court_df, aes(x = x, y = y), fill = \"white\", color = \"black\") +\n  geom_line(data = net_df, aes(x = x, y = y), color = \"red\", linetype = \"solid\", linewidth = .5) +\n  geom_point(\n    data = chou_shots_win,\n    aes(x = shuttle_x_mirrored, y = shuttle_y_mirrored, color = shot_type),\n    alpha = 0.7,\n    size = 3\n  ) +\n  coord_fixed() +\n  labs(\n    title = \"CHOU's Winning Shuttle Landing Positions\",\n    color = \"Shot Type\"\n  ) + scale_color_viridis_d(option = \"D\") + guides(color = guide_legend(ncol = 2)) +\n  theme_minimal() +\n  theme(\n    axis.text = element_blank(),\n    axis.title = element_blank(),\n    panel.grid = element_blank()\n  ) +\n  annotate(\"text\", \n         x = (court_coordinates$upleft_x + court_coordinates$upright_x) / 2, \n         y = court_coordinates$downleft_y + 30, \n         label = \"CHOU Tien Chen\", \n         size = 3,  color = \"black\", hjust = 0.5) +\nannotate(\"text\", \n         x = (court_coordinates$upleft_x + court_coordinates$upright_x) / 2, \n         y = court_coordinates$upleft_y - 30, \n         label = \"Opponent\", \n         size = 3,  color = \"black\", hjust = 0.5)\n\n\n\n\n\n\n\n\n\nCode\n# Filter for opponent's winning shots (CHOU lost the point)\nopp_shots_win &lt;- rally_data |&gt;\n  filter(current_player != \"CHOU Tien Chen\") |&gt;\n  filter(!is.na(shuttle_x), !is.na(shuttle_y), !is.na(opp_y), !is.na(rally_winner)) |&gt;\n  group_by(match_id, set, rally) |&gt;\n  slice_tail(n = 1) |&gt;\n  filter(rally_winner != \"CHOU Tien Chen\") |&gt;\n  mutate(\n    shuttle_y_mirrored = if_else(opp_y &gt; net_y, 2 * net_y - shuttle_y, shuttle_y),\n    shuttle_x_mirrored = shuttle_x\n  )\n\n# Plot for CHOU's losing points from opponent shots\nggplot() +\n  geom_polygon(data = court_df, aes(x = x, y = y), fill = \"white\", color = \"black\") +\n  geom_line(data = net_df, aes(x = x, y = y), color = \"red\", linetype = \"solid\", linewidth = .5) +\n  geom_point(\n    data = opp_shots_win,\n    aes(x = shuttle_x_mirrored, y = shuttle_y_mirrored, color = shot_type),\n    alpha = 0.7,\n    size = 3\n  ) +\n  coord_fixed() +\n  labs(\n    title = \"CHOU's Losing Shuttle Landing Positions\",\n    color = \"Shot Type\"\n  ) + \n  scale_color_viridis_d(option = \"D\") +\n  guides(color = guide_legend(ncol = 2)) +\n  theme_minimal() +\n  theme(\n    axis.text = element_blank(),\n    axis.title = element_blank(),\n    panel.grid = element_blank()\n  ) +\n  annotate(\"text\", \n           x = (court_coordinates$upleft_x + court_coordinates$upright_x) / 2, \n           y = court_coordinates$downleft_y + 30, \n           label = \"CHOU Tien Chen\", \n           size = 3,  color = \"black\", hjust = 0.5) +\n  annotate(\"text\", \n           x = (court_coordinates$upleft_x + court_coordinates$upright_x) / 2, \n           y = court_coordinates$upleft_y - 30, \n           label = \"Opponent\", \n           size = 3,  color = \"black\", hjust = 0.5)",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Visualize</span>"
    ]
  },
  {
    "objectID": "06-model.html",
    "href": "06-model.html",
    "title": "7  Model",
    "section": "",
    "text": "hi",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Model</span>"
    ]
  },
  {
    "objectID": "07-communicate.html",
    "href": "07-communicate.html",
    "title": "8  Communicate",
    "section": "",
    "text": "hi",
    "crumbs": [
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Communicate</span>"
    ]
  },
  {
    "objectID": "appendix.html",
    "href": "appendix.html",
    "title": "9  Appendix",
    "section": "",
    "text": "hi",
    "crumbs": [
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>Appendix</span>"
    ]
  }
]