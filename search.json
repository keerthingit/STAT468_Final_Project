[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "STAT468 Final Project Report",
    "section": "",
    "text": "0.1 Abstract\nPublicly available spatio-temporal datasets of badminton matches are scarce and in-depth analysis of badminton matches and players is limited. The existing literature include three-strokes rally analysis, stroke forecasting, shot influence, and player movement prediction. However, I could not find a study that examines a combination of rally characteristics such as shot type, rally length, shuttle, player and opponent positions and how they influence rally outcomes.\nI used the ShuttleSet dataset, a human-annotated dataset with stroke-by-stroke data including shot types, rally outcomes, positional data etc. It contains 44 matches of various players between 2018 and 2021. I focused specifically on men’s singles matches played by Chou Tien-Chen between 2018 and 2019 because he is the player with the most recorded matches in the dataset.\nI built an interactive Shiny application in which users specify rally length, shot type, player/opponent positions, and choose an opponent against Chou Tien Chen, and the application provides the user with the shuttle landing positions that maximize rally win probability.\nThe predictive model and analysis is limited to 11 matches and approximately 400 final rally shot data points. There were many data quality issues including rallies with missing or mismatched shot counts, unknown shot types, and misattributed players. I decided to remove these rallies which may impact generalizability of the model. Replacing missing and incorrect data points with means was considered but not implemented. As more comprehensive computer-vision datasets become available for badminton, the predictive accuracy of my model will improve.",
    "crumbs": [
      "<span class='chapter-number'>1</span>  <span class='chapter-title'>Abstract</span>"
    ]
  },
  {
    "objectID": "01-question.html",
    "href": "01-question.html",
    "title": "2  Question of Interest and Relevance",
    "section": "",
    "text": "How are the outcomes of a rally in CHOU’s badminton matches affected by the opponent, shot type, relative positions of the player, shuttle, and opponent, as well as rally length?\n\nA badminton player’s optimal shot placement for winning rallies may vary depending on the opponent. A player’s decision‐making in shot placement may change as a rally progresses. For example, when rallies drag on, fatigue may influence shot selection and placement.\nCommon strategies in badminton include placing the shot very close to opponent’s body to restrict their movement or directing the shot opposite to the opponent to force weak returns. Certain shot types, such as smashes and net shots are frequently used to score points but their success depends on the opponent’s strengths and weaknesses.\nBy analyzing the combined effects of opponent, shot type, rally length, and positions of the player, shuttle, and opponent, this project aims to identify patterns that can enhance Chou Tien‐Chen’s match strategies.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>Question of Interest and Relevance</span>"
    ]
  },
  {
    "objectID": "02-import.html",
    "href": "02-import.html",
    "title": "3  Import",
    "section": "",
    "text": "For this project, I focused on analyzing the men’s singles matches that Chou Tien‐Chen played between 2018 and 2021 in various tournaments. The ShuttleSet dataset is organized hierarchically where each match is stored in its own folder and within each match folder are separate CSV files for set 1, set 2, set 3. The set level files contain stroke‐level data.\nIn addition, the homography.csv maps pixel coordinates from each match video to actual court coordinates and the match.csv provides metadata such as match ID, duration, and round.\nAll files are publicly available through the ShuttleSet GitHub repository. To prepare the data for analysis, I downloaded the complete dataset ZIP from the GitHub repository, copied the relevant match folders along with the homography.csv and match.csv files and added them into my R project.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>Import</span>"
    ]
  },
  {
    "objectID": "03-tidy.html",
    "href": "03-tidy.html",
    "title": "4  Tidy",
    "section": "",
    "text": "Once the data was imported, my next goal was to bring it into a tidy format where each variable had its own column, each observation represented a single stroke, and each cell contained only one value. The ShuttleSet dataset already came in a partially tidy structure, but because it was stored hierarchically—one folder per match, with separate CSV files for each set—it required consolidation and standardization.\nI started by loading the match.csv file, which contains metadata for every match in the dataset, including tournament details, round, year, duration, winner, and loser. From here, I filtered down to only the matches where Chou Tien-Chen was either the winner or the loser, as he was the focus of my study. To make the subsequent joins more reliable, I assigned each match a unique match_id.\nFor each match in this filtered metadata table, I iterated through its associated folder and read in the set-level CSV files. Each set file already contained stroke-by-stroke data in a long format, but I appended identifying columns for match_id and set_id so that all strokes could be combined into one unified rally_data table. At this stage, I also noticed that shot types were stored in Chinese. To make them easier to interpret and model, I created a translation table mapping each Chinese term to an English equivalent.\nI joined the stroke-level data with the match metadata, adding tournament context and identifying the player who executed each shot. The original files used “A” and “B” to label players, so I mapped these to the actual player names based on whether they were the winner or loser of the match. I also determined the winner of each rally using the getpoint_player field. Some variables, like backhand, had missing values—these appeared to mean “false” rather than “unknown” so I replaced NA values with zeros to make them explicit.\nOne of the biggest challenges came from the homography.csv file, which is necessary to convert pixel coordinates from video frames into real court coordinates. This file was not tidy: the homography matrix for each match was stored as a single string rather than as a usable matrix. I wrote a parser to extract the numbers, reshape them into a (3) matrix, and store them in a list column so they could be applied to each stroke’s positional data. Using this transformation, I converted shuttle landing positions, as well as player and opponent positions, into a standardised court coordinate system. Because the player hitting the shot changes from stroke to stroke, I created new columns so that chou_x and chou_y always referred to Chou Tien-Chen’s position, and opp_x and opp_y always referred to his opponent’s position, regardless of who played the stroke. This consistent reference frame made it possible to compare positions across rallies and matches without worrying about player-side swaps.\nI wanted to verify that my coordinate system aligned correctly with the actual court. From the homography data, I transformed the pixel coordinates for the four corners of the court and saved them as court_coordinates. These became important later for both plotting and validating that all shuttle and player positions fell within reasonable bounds.\nWith positions transformed and roles standardised, I dropped the original pixel coordinates and other intermediate variables, renaming columns like ball_round to stroke and type to shot_type to better reflect their meaning. I then tackled data quality issues. Some rallies contained unknown shot types, missing coordinates, or mismatched shot counts compared to the actual rally—likely due to errors in the computer vision tracking. Rather than attempting to replace values, which could bias in such a small dataset, I chose to remove these problematic rallies entirely.\nFinally, I added some lightweight feature engineering. Within each set, rallies were divided into “early,” “mid,” and “late” phases based on their sequence order, allowing for potential analysis of how tactics or shot effectiveness change over time. Tournament names were also cleaned by removing trailing year values to prevent the same tournament from appearing as multiple factor levels.\nThe cleaning process produced four tidy outputs: matches_metadata.csv with the filtered matches and stable IDs, court_coordinates.csv with the transformed court corners, rally_data.csv with the fully cleaned and transformed stroke-level data, and set_data.csv with final set outcomes.",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Tidy</span>"
    ]
  },
  {
    "objectID": "04-transform.html",
    "href": "04-transform.html",
    "title": "5  Transform",
    "section": "",
    "text": "I created a set-level summary table by extracting the final stroke of each set, recording the set winner and the final scores for both Chou and his opponent. This served both as a quick reference for performance summaries and as a check that the match flow data matched the recorded results.\nI joined in the relevant match metadata so that each stroke carried information about the tournament, round, year, and opponent. I then grouped the data by match, set, and rally, filtering it down to just the final stroke in each rally. These final strokes were of particular interest because they directly determined rally outcomes.\nFor each rally-ending shot, I coded key variables as factors with meaningful levels and orders. The outcome variable chou_win was defined as a binary factor (“win” or “loss”), rounds were ordered from “Group-Stage” through to “Finals,” and the rally phase factor retained its early to mid to late ordering. Shot types, (forehand/backhand), set number, and opponent identity were also converted to factors for consistency. I filtered the data further so that it only contained rallies where Chou was the player executing the final stroke so the features would be defined from his perspective.\nI calculated the Euclidean distance between Chou and his opponent at the final stroke. This distance provided a measure of their relative positioning. I computed the unit vector from Chou to his opponent. These vectors formed the basis for a coordinate system anchored to the opponent’s position relative to Chou.\nUsing this coordinate system, I then calculated the Euclidean distance between Chou and the shuttle, followed by the shuttle’s parallel and perpendicular positions relative to the Chou–opponent line. This transformation allowed me to represent shuttle placement not just in raw court coordinates but in a way that was interpretable in the tactical context of each rally.",
    "crumbs": [
      "<span class='chapter-number'>5</span>  <span class='chapter-title'>Transform</span>"
    ]
  },
  {
    "objectID": "05-visualize.html",
    "href": "05-visualize.html",
    "title": "6  Visualize",
    "section": "",
    "text": "Code\nlibrary(dplyr)\n\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\n\nCode\nlibrary(ggplot2)\nlibrary(gt)\nlibrary(lubridate)\n\n\n\nAttaching package: 'lubridate'\n\n\nThe following objects are masked from 'package:base':\n\n    date, intersect, setdiff, union\n\n\nCode\nlibrary(forcats) \n\nmatches_metadata &lt;- \n  readr::read_csv(\"../cleaned data/matches_metadata.csv\", \n                  show_col_types = FALSE) \nset_data &lt;- \n  readr::read_csv(\"../cleaned data/set_data.csv\", \n                  show_col_types = FALSE) \n\ncourt_coordinates &lt;- \n  readr::read_csv(\"../cleaned data/court_coordinates.csv\", \n                  show_col_types = FALSE) \nrally_data &lt;- \n  readr::read_csv(\"../cleaned data/rally_data.csv\",\n                  show_col_types = FALSE)\n\n\n\n\nCode\ntable_1 &lt;- set_data |&gt; \n  left_join(matches_metadata |&gt; \n              select(match_id, tournament, round, year, \n                     winner, loser), by = \"match_id\") |&gt;\n  rename(\n    match_winner = winner,\n    match_loser = loser\n  ) |&gt;\n  mutate(\n    set_loser = if_else(set_winner == match_winner, \n                        match_loser, match_winner),\n    set_winner_points = if_else(set_winner == \"CHOU Tien Chen\",\n                            chou_score, opp_score),\n    set_loser_points = if_else(set_loser == \"CHOU Tien Chen\", \n                           chou_score, opp_score)\n  ) |&gt; \n  select(-chou_score,-opp_score) |&gt;\n  arrange(year) \n\ntable_1 &lt;- table_1 |&gt;\n  mutate(\n    match_label = paste0(\n      tournament, \" / \", round, \" / \", year, \" / \", match_winner, \"* vs \", match_loser\n    ),\n    set_score = paste0(set_winner_points, \" - \", set_loser_points, \n                   \" (\", abs(set_winner_points - set_loser_points), \")\"),\n    set_label = paste0(\"Set \", set)\n  )\n\ntable_1 |&gt;\n  select(\n    match_label, set_label, set_winner, set_loser, set_score\n  ) |&gt;\n  gt(groupname_col = \"match_label\") |&gt;\n  cols_label(\n    set_label = \"\", \n    set_winner = \"\", \n    set_loser = \"\", \n    set_score = \"\"\n  ) |&gt;\n  tab_options(\n    table.background.color = \"#f9f9f9\",\n    table.border.top.style = \"none\",\n    table.border.bottom.style = \"none\",\n    heading.border.bottom.style = \"none\",\n    column_labels.border.top.style = \"none\",\n    column_labels.border.bottom.style = \"none\",\n    row.striping.include_table_body = FALSE\n  ) |&gt;\n  cols_align(\n    align = \"left\",\n    columns = c(set_label, set_winner, set_loser, set_score)\n  ) |&gt;\n  tab_style(\n    style = cell_text(indent = px(20)),\n    locations = cells_body(columns = set_label)\n  ) |&gt;\n  tab_style(\n    style = list(cell_fill(color = \"#E4F2D5\")),\n    locations = cells_body(columns = set_winner,\n                           rows = set_winner == \"CHOU Tien Chen\")\n  ) |&gt;\n  tab_style(\n    style = list(cell_fill(color = \"#FFCCCB\")),\n    locations = cells_body(columns = set_loser,\n                           rows = set_loser == \"CHOU Tien Chen\")\n  ) |&gt;\n  tab_source_note(\n    md(\"**Notes**: An asterisk (*) next to a player's name in the header indicates the match winner. \n    \n    \n    The table displays each set’s number, set winner and loser, and final score with the point difference in parentheses.\n    \n    Green highlights indicate sets won by CHOU Tien Chen and red highlights indicate sets lost by him.\")\n  )|&gt; \n  opt_stylize(style = 6, color = 'gray')\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nFuzhou Open / Finals / 2018 / Kento MOMOTA* vs CHOU Tien Chen\n\n\nSet 1\nKento MOMOTA\nCHOU Tien Chen\n21 - 13 (8)\n\n\nSet 2\nCHOU Tien Chen\nKento MOMOTA\n21 - 11 (10)\n\n\nSet 3\nKento MOMOTA\nCHOU Tien Chen\n21 - 16 (5)\n\n\nDenmark Open / Finals / 2018 / Kento MOMOTA* vs CHOU Tien Chen\n\n\nSet 1\nKento MOMOTA\nCHOU Tien Chen\n22 - 20 (2)\n\n\nSet 2\nCHOU Tien Chen\nKento MOMOTA\n21 - 16 (5)\n\n\nSet 3\nKento MOMOTA\nCHOU Tien Chen\n21 - 15 (6)\n\n\nMalaysia Open / Quarter-finals / 2018 / Kento MOMOTA* vs CHOU Tien Chen\n\n\nSet 1\nKento MOMOTA\nCHOU Tien Chen\n21 - 19 (2)\n\n\nSet 2\nCHOU Tien Chen\nKento MOMOTA\n11 - 19 (8)\n\n\nFuzhou Open / Finals / 2019 / Kento MOMOTA* vs CHOU Tien Chen\n\n\nSet 1\nKento MOMOTA\nCHOU Tien Chen\n21 - 15 (6)\n\n\nSet 2\nCHOU Tien Chen\nKento MOMOTA\n21 - 17 (4)\n\n\nSet 3\nKento MOMOTA\nCHOU Tien Chen\n21 - 18 (3)\n\n\nWorld Tour Finals / Group-Stage / 2019 / CHEN Long* vs CHOU Tien Chen\n\n\nSet 1\nCHEN Long\nCHOU Tien Chen\n21 - 15 (6)\n\n\nSet 2\nCHEN Long\nCHOU Tien Chen\n21 - 19 (2)\n\n\nKOREA OPEN / Finals / 2019 / Kento MOMOTA* vs CHOU Tien Chen\n\n\nSet 1\nKento MOMOTA\nCHOU Tien Chen\n21 - 19 (2)\n\n\nSet 2\nKento MOMOTA\nCHOU Tien Chen\n21 - 17 (4)\n\n\nDenmark Open / Quarter-finals / 2019 / CHEN Long* vs CHOU Tien Chen\n\n\nSet 1\nCHEN Long\nCHOU Tien Chen\n21 - 17 (4)\n\n\nSet 2\nCHEN Long\nCHOU Tien Chen\n21 - 17 (4)\n\n\nFuzhou Open / Semi-finals / 2019 / CHOU Tien Chen* vs Anders ANTONSEN\n\n\nSet 1\nCHOU Tien Chen\nAnders ANTONSEN\n21 - 10 (11)\n\n\nSet 2\nCHOU Tien Chen\nAnders ANTONSEN\n18 - 12 (6)\n\n\nSudirman Cup / Quarter-finals / 2019 / CHOU Tien Chen* vs Jonatan CHRISTIE\n\n\nSet 1\nCHOU Tien Chen\nJonatan CHRISTIE\n20 - 10 (10)\n\n\nSet 2\nCHOU Tien Chen\nJonatan CHRISTIE\n21 - 13 (8)\n\n\nSudirman Cup / Group-Stage / 2019 / CHOU Tien Chen* vs NG Ka Long Angus\n\n\nSet 1\nCHOU Tien Chen\nNG Ka Long Angus\n21 - 15 (6)\n\n\nSet 2\nCHOU Tien Chen\nNG Ka Long Angus\n21 - 15 (6)\n\n\nIndonesia Open / Quarter-finals / 2019 / CHOU Tien Chen* vs Jonatan CHRISTIE\n\n\nSet 1\nJonatan CHRISTIE\nCHOU Tien Chen\n15 - 14 (1)\n\n\nSet 2\nCHOU Tien Chen\nJonatan CHRISTIE\n21 - 18 (3)\n\n\nSet 3\nCHOU Tien Chen\nJonatan CHRISTIE\n12 - 4 (8)\n\n\n\n\n\nNotes: An asterisk (*) next to a player’s name in the header indicates the match winner.\n\nThe table displays each set’s number, set winner and loser, and final score with the point difference in parentheses.\n\nGreen highlights indicate sets won by CHOU Tien Chen and red highlights indicate sets lost by him.\n\n\n\n\n\n\n\n\n\n\n\nCode\ntable_2 &lt;- matches_metadata |&gt; \n  summarise(\n    matches_played = n(),\n    matches_won = sum(winner == \"CHOU Tien Chen\"),\n    matches_summary = paste(matches_won,\"/\",matches_played)\n  )\n\ntable_2 |&gt;\n  select(matches_summary) |&gt;\n  gt() |&gt;\n  cols_label(\n    matches_summary = \"Matches Won\"\n  ) |&gt;\n  tab_options(\n    table.background.color = \"#E5E4E2\"\n  ) |&gt;\n  tab_style(\n    style = cell_text(align = \"center\"),\n    locations = cells_body()\n  ) |&gt; \n  opt_stylize(style = 6, color = 'gray')\n\n\n\n\n\n\n\n\nMatches Won\n\n\n\n\n4 / 11\n\n\n\n\n\n\n\n\n\nCode\nrally_lengths &lt;- rally_data |&gt;\n  filter(!is.na(rally_winner)) |&gt;\n  group_by(match_id, set, rally) |&gt;\n  slice_tail(n = 1) |&gt;\n  summarise(\n    rally_length = max(stroke),\n    rally_winner = rally_winner,\n    .groups = \"drop\"\n  )|&gt;\n  mutate(\n    chou_result = if_else(\n      rally_winner == \"CHOU Tien Chen\", \n      \"Win\", \n      \"Loss\"\n    )\n  )\n\nmean_length &lt;- mean(rally_lengths$rally_length, na.rm = TRUE)\nsd_length &lt;- sd(rally_lengths$rally_length, na.rm = TRUE)\n\nrally_lengths |&gt;\n  summarise(\n    count = n(),\n    mean = mean(rally_length),\n    sd = sd(rally_length),\n    min = min(rally_length),\n    Q1 = quantile(rally_length, 0.25),\n    median = median(rally_length),\n    Q3 = quantile(rally_length, 0.75),\n    max = max(rally_length)\n  ) |&gt;\n  gt() |&gt;\n  fmt_number(columns = everything(), decimals = 0) |&gt;\n  cols_label(\n    count = \"No. of rallies\",\n    mean = \"Mean\",\n    sd = \"Standard deviation\",\n    min = \"Minimum\",\n    Q1 = \"Q1\",\n    median = \"Median\",\n    Q3 = \"Q3\",\n    max = \"Maximum\"\n  ) |&gt;\n  cols_align(align = \"center\", columns = everything()) |&gt; \n  tab_style(                                              \n    style = cell_text(align = \"center\"),\n    locations = cells_column_labels(columns = everything())\n  ) |&gt;\n  tab_options(\n    data_row.padding = px(6),\n    column_labels.padding = px(10),\n    table.width = pct(100)\n  ) |&gt;\n  opt_stylize(style = 6, color = \"gray\")\n\n\n\n\n\n\n\n\nNo. of rallies\nMean\nStandard deviation\nMinimum\nQ1\nMedian\nQ3\nMaximum\n\n\n\n\n747\n12\n9\n1\n6\n10\n15\n48\n\n\n\n\n\n\n\nCode\nggplot(rally_lengths, aes(x = rally_length)) +\n  geom_histogram(binwidth = 1, \n                 fill = \"#A3D1FF\", color = \"white\") +\n  geom_vline(aes(xintercept = mean_length), \n             color = \"black\", linetype = \"solid\", \n             size = 0.1) +\n  geom_vline(aes(xintercept = mean_length + sd_length), \n             color = \"black\", linetype = \"dashed\", \n             size = 0.1) +\n  geom_vline(aes(xintercept = mean_length - sd_length), \n             color = \"black\", linetype = \"dashed\", \n             size = 0.1) +\n  labs(\n    title = \"Distribution of Rally Lengths\",\n    x = \"Number of Strokes in a Rally\",\n    y = \"Frequency\"\n  ) +\n  theme_minimal()\n\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n\n\n\n\n\n\n\n\n\nCode\nggplot(rally_lengths, \n       aes(rally_length, fill = chou_result)) +\n  geom_histogram(binwidth = 3, color = \"white\")  +\n  scale_fill_manual(\n    values = c(\"Win\" = \"#CDECCB\", \"Loss\" = \"#FFB3B3\"),\n    name = \"CHOU Tien Chen\"\n  ) +\n  labs(\n    title = \"Rally Length Distribution by CHOU Tien Chen's Wins and Losses\",\n    x = \"Number of Strokes in a Rally\",\n    y = \"Frequency\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n\nCode\nchou_shots &lt;- rally_data |&gt;\n  filter(current_player == \"CHOU Tien Chen\") |&gt;\n  group_by(match_id, set, rally) |&gt;\n  mutate(\n    last_by_chou = row_number() == max(row_number())) |&gt;\n  filter(last_by_chou) |&gt;\n  select(match_id, set, rally, shot_type, rally_winner)|&gt;\n  filter(!is.na(rally_winner)) |&gt;\n  mutate(won_point = if_else(rally_winner == \"CHOU Tien Chen\", 1, 0)) |&gt;\n  group_by(shot_type) |&gt;\n  summarise(\n    total = n(),\n    points_won = sum(won_point),\n    .groups = \"drop\"\n  ) |&gt;\n  ungroup()\n  \nggplot(chou_shots, aes(x = fct_reorder(shot_type, total), y = total, fill = points_won)) +\n  geom_col() +\n  coord_flip() +\n  geom_text(aes(label = paste0(total, \" (\", points_won, \")\")), \n            hjust = -0.1, size = 3) +\n  scale_fill_gradient(low = \"#FFB3B3\", high = \"#CDECCB\", name = \"Points Won\") +\n  labs(\n    title = \"CHOU Tien Chen’s Shot Types and Their Success\",\n    x = \"Shot Type\",\n    y = \"Number of Times Used\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n\nCode\nwinning_shots &lt;- rally_data |&gt;\n  filter(current_player == \"CHOU Tien Chen\") |&gt;\n  group_by(match_id, set, rally) |&gt;\n  slice_tail(n = 1) |&gt;\n  filter(rally_winner == \"CHOU Tien Chen\") |&gt;\n  select(match_id, set, rally, shot_type) |&gt;\n  ungroup() |&gt;\n  count(shot_type, name = \"chou_wins\")\n\nggplot(winning_shots, aes(x = fct_reorder(shot_type, chou_wins), y = chou_wins)) +\n  geom_col(fill = \"#CDECCB\") +\n  coord_flip() +\n  labs(\n    title = \"CHOU Tien Chen’s Winning Shots\",\n    x = \"Shot Type\",\n    y = \"Rallies Won by CHOU\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n\nCode\nwinning_shots_hand &lt;- rally_data |&gt;\n  filter(current_player == \"CHOU Tien Chen\") |&gt;\n  group_by(match_id, set, rally) |&gt;\n  slice_tail(n = 1) |&gt;\n  filter(rally_winner == \"CHOU Tien Chen\") |&gt;\n  select(match_id, set, rally, shot_type, backhand) |&gt;\n  mutate(hand = if_else(backhand == 1, \"Backhand\", \"Fronthand\")) |&gt;\n  ungroup() |&gt;\n  count(shot_type, hand)\n\nggplot(winning_shots_hand, aes(x = fct_reorder(shot_type, n, sum), y = n, fill = hand)) +\n  geom_col() +\n  coord_flip() +\n  scale_fill_manual(values = c(\"Fronthand\" = \"#A3D1FF\", \"Backhand\" = \"#2A7BC4\")) +\n  labs(\n    title = \"CHOU Tien Chen’s Winning Shots by Hand Used\",\n    x = \"Shot Type\",\n    y = \"Rallies Won\",\n    fill = \"Hand Used\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\nCode\nrally_data |&gt;\n  filter(current_player == \"CHOU Tien Chen\") |&gt;\n  select(match_id, set, rally, backhand, rally_winner) |&gt;\n  group_by(match_id, set, rally) |&gt;\n  slice_tail(n = 1) |&gt;\n  filter(!is.na(rally_winner)) |&gt;\n  mutate(\n    hand = if_else(backhand == 1, \"Backhand\", \"Fronthand\"),\n    point_won = rally_winner == \"CHOU Tien Chen\"\n  ) |&gt;\n  group_by(hand) |&gt;\n  summarise(\n    total = n(),\n    points_won = sum(point_won),\n    pct_won = round(100 * points_won / total, 1),\n    .groups = \"drop\"\n  ) |&gt;\n  gt() |&gt;\n  fmt_number(columns = c(total, points_won), decimals = 0) |&gt;\n  fmt_percent(columns = pct_won, scale_values = FALSE, decimals = 0) |&gt;\n  cols_label(\n    hand = \"Hand\",\n    total = \"Total Shots\",\n    points_won = \"Total Points\",\n    pct_won = \"% Shots Scored\"\n  ) |&gt;\n  cols_align(align = \"center\", columns = everything()) |&gt; \n  tab_style(                                              \n    style = cell_text(align = \"center\"),\n    locations = cells_column_labels(columns = everything())\n  ) |&gt;\n  tab_options(\n    data_row.padding = px(6),\n    column_labels.padding = px(10),\n    table.width = pct(100)\n  ) |&gt;\n  opt_stylize(style = 6, color = \"gray\")\n\n\n\n\n\n\n\n\nHand\nTotal Shots\nTotal Points\n% Shots Scored\n\n\n\n\nBackhand\n130\n19\n15%\n\n\nFronthand\n279\n138\n50%\n\n\n\n\n\n\n\n\n\nCode\nloosing_shots &lt;- rally_data |&gt;\n  filter(current_player != \"CHOU Tien Chen\") |&gt;\n  group_by(match_id, set, rally) |&gt;\n  slice_tail(n = 1) |&gt;\n  filter(rally_winner != \"CHOU Tien Chen\") |&gt;\n  select(match_id, set, rally, shot_type) |&gt;\n  ungroup() |&gt;  \n  count(shot_type, name = \"chou_losses\")\n  \nggplot(loosing_shots, aes(x = fct_reorder(shot_type, chou_losses), y = chou_losses)) +\n  geom_col(fill = \"#FFB3B3\") +\n  coord_flip() +\n  labs(\n    title = \"Opponent Shots That Led to CHOU Tien Chen Losing\",\n    x = \"Shot Type\",\n    y = \"Rallies Lost by CHOU\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n\n\n\n\nCode\nshuttle_points &lt;- rally_data |&gt;\n  filter(!is.na(shuttle_x), !is.na(shuttle_y))|&gt;\n  count(shuttle_x, shuttle_y, name = \"freq\") \n\n# Court polygon\ncourt_df &lt;- tibble(\n  x = c(\n    court_coordinates$upleft_x,\n    court_coordinates$upright_x,\n    court_coordinates$downright_x,\n    court_coordinates$downleft_x\n  ),\n  y = c(\n    court_coordinates$upleft_y,\n    court_coordinates$upright_y,\n    court_coordinates$downright_y,\n    court_coordinates$downleft_y\n  )\n)\n\n# Net line\nnet_y &lt;- (court_coordinates$upleft_y + court_coordinates$downleft_y) / 2\n\nnet_df &lt;- tibble(\n  x = c(court_coordinates$upleft_x, court_coordinates$upright_x),\n  y = c(net_y, net_y)\n)\n\n# Plot court with points\nggplot() +\n  geom_polygon(data = court_df, aes(x = x, y = y), fill = \"white\", color = \"black\") +\n  geom_line(data = net_df, aes(x = x, y = y), color = \"red\", linetype = \"solid\", linewidth = 1) +\n  geom_point(\n    data = shuttle_points,\n    aes(x = shuttle_x, y = shuttle_y, size = freq, alpha = freq),\n    color = \"#2A7BC4\"\n  ) +\n  scale_size_continuous(range = c(1, 6), guide = \"none\") +\n  scale_alpha_continuous(range = c(0.2, 0.9), guide = \"none\") +\n  coord_fixed() +\n  labs(\n    title = \"Shuttle Landing Points\",\n    subtitle = \"Point size and transparency reflect frequency\",\n    x = NULL,\n    y = NULL\n  ) +\n  theme_minimal() +\n  theme(\n    axis.text = element_blank(),\n    axis.title = element_blank(),\n    panel.grid = element_blank()\n  )\n\n\n\n\n\n\n\n\n\nCode\nchou_shots_win &lt;- rally_data |&gt;\n  filter(current_player == \"CHOU Tien Chen\") |&gt;\n  filter(!is.na(shuttle_x), !is.na(shuttle_y), !is.na(chou_y), !is.na(rally_winner)) |&gt;\n  group_by(match_id, set, rally) |&gt;\n  slice_tail(n = 1) |&gt;\n  mutate(\n    point_outcome = if_else(rally_winner == \"CHOU Tien Chen\", \"Win\", \"No Point\"),\n    shuttle_y_mirrored = if_else(chou_y &lt; net_y, 2 * net_y - shuttle_y, shuttle_y),\n    shuttle_x_mirrored = shuttle_x  # &lt;- this line is corrected\n  ) |&gt;\n  filter(point_outcome == \"Win\")\n\n\nggplot() +\n  geom_polygon(data = court_df, aes(x = x, y = y), fill = \"white\", color = \"black\") +\n  geom_line(data = net_df, aes(x = x, y = y), color = \"red\", linetype = \"solid\", linewidth = .5) +\n  geom_point(\n    data = chou_shots_win,\n    aes(x = shuttle_x_mirrored, y = shuttle_y_mirrored, color = shot_type),\n    alpha = 0.7,\n    size = 3\n  ) +\n  coord_fixed() +\n  labs(\n    title = \"CHOU's Winning Shuttle Landing Positions\",\n    color = \"Shot Type\"\n  ) + scale_color_viridis_d(option = \"D\") + guides(color = guide_legend(ncol = 2)) +\n  theme_minimal() +\n  theme(\n    axis.text = element_blank(),\n    axis.title = element_blank(),\n    panel.grid = element_blank()\n  ) +\n  annotate(\"text\", \n         x = (court_coordinates$upleft_x + court_coordinates$upright_x) / 2, \n         y = court_coordinates$downleft_y + 30, \n         label = \"CHOU Tien Chen\", \n         size = 3,  color = \"black\", hjust = 0.5) +\nannotate(\"text\", \n         x = (court_coordinates$upleft_x + court_coordinates$upright_x) / 2, \n         y = court_coordinates$upleft_y - 30, \n         label = \"Opponent\", \n         size = 3,  color = \"black\", hjust = 0.5)\n\n\n\n\n\n\n\n\n\nCode\n# Filter for opponent's winning shots (CHOU lost the point)\nopp_shots_win &lt;- rally_data |&gt;\n  filter(current_player != \"CHOU Tien Chen\") |&gt;\n  filter(!is.na(shuttle_x), !is.na(shuttle_y), !is.na(opp_y), !is.na(rally_winner)) |&gt;\n  group_by(match_id, set, rally) |&gt;\n  slice_tail(n = 1) |&gt;\n  filter(rally_winner != \"CHOU Tien Chen\") |&gt;\n  mutate(\n    shuttle_y_mirrored = if_else(opp_y &gt; net_y, 2 * net_y - shuttle_y, shuttle_y),\n    shuttle_x_mirrored = shuttle_x\n  )\n\n# Plot for CHOU's losing points from opponent shots\nggplot() +\n  geom_polygon(data = court_df, aes(x = x, y = y), fill = \"white\", color = \"black\") +\n  geom_line(data = net_df, aes(x = x, y = y), color = \"red\", linetype = \"solid\", linewidth = .5) +\n  geom_point(\n    data = opp_shots_win,\n    aes(x = shuttle_x_mirrored, y = shuttle_y_mirrored, color = shot_type),\n    alpha = 0.7,\n    size = 3\n  ) +\n  coord_fixed() +\n  labs(\n    title = \"CHOU's Losing Shuttle Landing Positions\",\n    color = \"Shot Type\"\n  ) + \n  scale_color_viridis_d(option = \"D\") +\n  guides(color = guide_legend(ncol = 2)) +\n  theme_minimal() +\n  theme(\n    axis.text = element_blank(),\n    axis.title = element_blank(),\n    panel.grid = element_blank()\n  ) +\n  annotate(\"text\", \n           x = (court_coordinates$upleft_x + court_coordinates$upright_x) / 2, \n           y = court_coordinates$downleft_y + 30, \n           label = \"CHOU Tien Chen\", \n           size = 3,  color = \"black\", hjust = 0.5) +\n  annotate(\"text\", \n           x = (court_coordinates$upleft_x + court_coordinates$upright_x) / 2, \n           y = court_coordinates$upleft_y - 30, \n           label = \"Opponent\", \n           size = 3,  color = \"black\", hjust = 0.5)",
    "crumbs": [
      "<span class='chapter-number'>6</span>  <span class='chapter-title'>Visualize</span>"
    ]
  },
  {
    "objectID": "06-model.html",
    "href": "06-model.html",
    "title": "7  Model",
    "section": "",
    "text": "Code\nlibrary(dplyr)\n\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\n\nCode\nlibrary(ggplot2)\nlibrary(car)\n\n\nLoading required package: carData\n\n\n\nAttaching package: 'car'\n\n\nThe following object is masked from 'package:dplyr':\n\n    recode\n\n\nCode\nlibrary(reshape2)\nlibrary(olsrr)\n\n\n\nAttaching package: 'olsrr'\n\n\nThe following object is masked from 'package:datasets':\n\n    rivers\n\n\nCode\nlibrary(tidyverse)\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ lubridate 1.9.4     ✔ tibble    3.3.0\n✔ purrr     1.1.0     ✔ tidyr     1.3.1\n✔ readr     2.1.5     \n\n\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n✖ car::recode()   masks dplyr::recode()\n✖ purrr::some()   masks car::some()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\n\nCode\nlibrary(lsr)\nlibrary(lme4)\n\n\nLoading required package: Matrix\n\nAttaching package: 'Matrix'\n\nThe following objects are masked from 'package:tidyr':\n\n    expand, pack, unpack\n\n\nCode\nlibrary(pROC)\n\n\nType 'citation(\"pROC\")' for a citation.\n\nAttaching package: 'pROC'\n\nThe following objects are masked from 'package:stats':\n\n    cov, smooth, var\n\n\nCode\n# load data\nrally_data &lt;- \n  read_csv(\"../cleaned data/rally_data.csv\",\n                  show_col_types = FALSE)\nmatches_metadata &lt;- \n  read_csv(\"../cleaned data/matches_metadata.csv\", \n                  show_col_types = FALSE)\ncourt_coordinates &lt;- \n  read_csv(\"../cleaned data/court_coordinates.csv\", \n                  show_col_types = FALSE)\n\nfinal_stroke_data &lt;- rally_data |&gt;\n  # get match metadata\n  left_join(matches_metadata |&gt;\n              select(tournament, match_id, year, round, winner, loser), \n             by = \"match_id\") |&gt;\n  group_by(match_id, set, rally) |&gt;\n  # filter to final strokes in rally only\n  filter(row_number() == n()) |&gt; \n  ungroup() |&gt;\n  # add factor() \n  mutate(\n    tournament = factor(tournament),\n    chou_win = factor(\n      ifelse(rally_winner == \"CHOU Tien Chen\", 1, 0),\n      levels = c(0, 1),\n      labels = c(\"loss\", \"win\")),\n    round = factor(\n      round,\n      levels = c(\"Group-Stage\", \"Quarter-finals\", \"Semi-finals\", \"Finals\"),\n      ordered = TRUE),\n    set = factor(set, ordered = TRUE),\n    rally_phase = factor(\n      rally_phase, \n      levels = c(\"early\", \"mid\", \"late\"), \n      ordered = TRUE),\n    shot_type = factor(shot_type),\n    backhand = factor(\n      backhand, \n      levels = c(0,1), \n      labels = c(\"forehand\",\"backhand\")),\n    opponent = factor(if_else(winner == \"CHOU Tien Chen\", loser, winner))\n  ) |&gt;\n  rename(\n    rally_length = stroke\n  ) |&gt;\n  filter(current_player == \"CHOU Tien Chen\") |&gt;\n  select(\n    year, tournament, match_id, opponent, round, \n    set, rally_phase, rally_length, \n    chou_win, shot_type, backhand, \n    chou_x, chou_y, opp_x, \n    opp_y, shuttle_x, shuttle_y\n  )\n\n# Modelling\n\n# Logistic Regression\n# Assumption 1: Outcome is binary \n# Satisfied since chou_win is binary\n\nmodel1 &lt;- glm(chou_win ~ tournament + year + opponent + set + rally_phase + \n                         rally_length + shot_type + backhand + \n                         chou_x + chou_y + opp_x + opp_y + \n                         shuttle_x + shuttle_y, \n              data = final_stroke_data, \n              family = binomial(link = \"logit\"))\n\nsummary(model1)\n\n\n\nCall:\nglm(formula = chou_win ~ tournament + year + opponent + set + \n    rally_phase + rally_length + shot_type + backhand + chou_x + \n    chou_y + opp_x + opp_y + shuttle_x + shuttle_y, family = binomial(link = \"logit\"), \n    data = final_stroke_data)\n\nCoefficients: (1 not defined because of singularities)\n                                  Estimate Std. Error z value Pr(&gt;|z|)   \n(Intercept)                     -1.173e+03  1.092e+03  -1.074  0.28285   \ntournamentFuzhou Open           -8.948e-01  5.855e-01  -1.528  0.12647   \ntournamentIndonesia Open        -2.351e+00  1.399e+00  -1.680  0.09288 . \ntournamentKOREA OPEN            -6.262e-01  8.085e-01  -0.775  0.43856   \ntournamentMalaysia Open         -4.871e-01  6.381e-01  -0.763  0.44522   \ntournamentSudirman Cup          -1.713e+00  1.120e+00  -1.530  0.12612   \ntournamentWorld Tour Finals     -2.422e-01  6.995e-01  -0.346  0.72914   \nyear                             5.844e-01  5.414e-01   1.080  0.28034   \nopponentCHEN Long               -1.703e+00  1.022e+00  -1.665  0.09587 . \nopponentJonatan CHRISTIE         1.923e+00  8.967e-01   2.144  0.03200 * \nopponentKento MOMOTA            -9.882e-01  8.017e-01  -1.233  0.21773   \nopponentNG Ka Long Angus                NA         NA      NA       NA   \nset.L                            3.776e-01  3.411e-01   1.107  0.26832   \nset.Q                            6.555e-02  2.746e-01   0.239  0.81132   \nrally_phase.L                   -3.216e-01  2.526e-01  -1.273  0.20306   \nrally_phase.Q                    1.850e-01  2.547e-01   0.726  0.46760   \nrally_length                     2.790e-02  1.754e-02   1.591  0.11171   \nshot_typeclear                  -1.644e+00  1.624e+00  -1.012  0.31138   \nshot_typecross-court net shot   -1.110e+00  1.607e+00  -0.691  0.48949   \nshot_typedefensive return drive -6.110e-03  1.888e+00  -0.003  0.99742   \nshot_typedefensive return lob    8.914e-01  1.988e+00   0.448  0.65380   \nshot_typedrive                  -1.843e+00  1.682e+00  -1.096  0.27313   \nshot_typedriven flight          -1.621e+01  2.400e+03  -0.007  0.99461   \nshot_typedrop                   -1.274e+00  1.721e+00  -0.740  0.45905   \nshot_typelob                    -2.103e+00  1.634e+00  -1.288  0.19786   \nshot_typelong service           -1.741e+01  2.400e+03  -0.007  0.99421   \nshot_typenet shot               -3.531e+00  1.654e+00  -2.135  0.03277 * \nshot_typepassive drop           -1.708e+01  1.028e+03  -0.017  0.98674   \nshot_typepush                   -2.056e+00  1.660e+00  -1.238  0.21555   \nshot_typereturn net             -2.793e+00  1.585e+00  -1.763  0.07798 . \nshot_typerush                    5.895e-01  1.572e+00   0.375  0.70765   \nshot_typeshort service          -2.298e-01  2.040e+00  -0.113  0.91035   \nshot_typesmash                   5.218e-01  1.515e+00   0.344  0.73058   \nshot_typewrist smash             1.281e+00  1.709e+00   0.749  0.45375   \nbackhandbackhand                -9.794e-01  4.238e-01  -2.311  0.02085 * \nchou_x                           2.945e-03  3.335e-03   0.883  0.37717   \nchou_y                          -4.726e-03  2.088e-03  -2.264  0.02360 * \nopp_x                           -2.844e-03  4.368e-03  -0.651  0.51509   \nopp_y                           -5.902e-03  2.228e-03  -2.649  0.00807 **\nshuttle_x                        5.034e-04  1.409e-03   0.357  0.72092   \nshuttle_y                        6.326e-04  1.081e-03   0.585  0.55855   \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 544.73  on 408  degrees of freedom\nResidual deviance: 333.05  on 369  degrees of freedom\nAIC: 413.05\n\nNumber of Fisher Scoring iterations: 15\n\n\nCode\n# shot_typedriven flight, shot_typelong service, shot_typeshort service \n# have large std error because they are rarely used in final shots\n\n\n# some shot types have really large std errors in model1\n# aggregate those shots to create a new level \"Other\"\n# alternate option was to use bootstrapping/oversampling \n# to decrease class imbalance\n\nrare_shots &lt;- final_stroke_data |&gt;\n  count(shot_type) |&gt;\n  filter(n &lt; 6) |&gt;\n  pull(shot_type)\n\n# Replace rare shot types with \"other\"\nfinal_stroke_data &lt;- final_stroke_data |&gt;\n  mutate(\n    shot_type = factor(ifelse(shot_type %in% rare_shots, \n                              \"other\", \n                              as.character(shot_type)))\n  )\n\n# no large std error anymore\nmodel2 &lt;- glm(chou_win ~ year + tournament + opponent + round + set + rally_phase + \n                rally_length + shot_type + backhand + \n                chou_x + chou_y + opp_x + opp_y + \n                shuttle_x + shuttle_y, \n              data = final_stroke_data, \n              family = binomial(link = \"logit\"))\n\nsummary(model2)\n\n\n\nCall:\nglm(formula = chou_win ~ year + tournament + opponent + round + \n    set + rally_phase + rally_length + shot_type + backhand + \n    chou_x + chou_y + opp_x + opp_y + shuttle_x + shuttle_y, \n    family = binomial(link = \"logit\"), data = final_stroke_data)\n\nCoefficients: (4 not defined because of singularities)\n                                Estimate Std. Error z value Pr(&gt;|z|)    \n(Intercept)                   -1.240e+03  1.078e+03  -1.150 0.250116    \nyear                           6.163e-01  5.343e-01   1.154 0.248662    \ntournamentFuzhou Open         -8.520e-01  5.729e-01  -1.487 0.136956    \ntournamentIndonesia Open      -2.178e+00  1.338e+00  -1.628 0.103584    \ntournamentKOREA OPEN          -6.427e-01  7.812e-01  -0.823 0.410659    \ntournamentMalaysia Open       -2.538e-01  6.248e-01  -0.406 0.684538    \ntournamentSudirman Cup        -1.694e+00  1.054e+00  -1.606 0.108198    \ntournamentWorld Tour Finals   -2.062e-01  6.972e-01  -0.296 0.767386    \nopponentCHEN Long             -1.591e+00  9.810e-01  -1.622 0.104878    \nopponentJonatan CHRISTIE       1.980e+00  8.689e-01   2.279 0.022655 *  \nopponentKento MOMOTA          -9.857e-01  7.526e-01  -1.310 0.190274    \nopponentNG Ka Long Angus              NA         NA      NA       NA    \nround.L                               NA         NA      NA       NA    \nround.Q                               NA         NA      NA       NA    \nround.C                               NA         NA      NA       NA    \nset.L                          3.665e-01  3.372e-01   1.087 0.277186    \nset.Q                          1.797e-01  2.652e-01   0.677 0.498114    \nrally_phase.L                 -3.903e-01  2.456e-01  -1.589 0.111995    \nrally_phase.Q                  1.283e-01  2.500e-01   0.513 0.607851    \nrally_length                   2.656e-02  1.665e-02   1.595 0.110716    \nshot_typecross-court net shot  5.304e-01  7.716e-01   0.687 0.491841    \nshot_typedrive                -2.406e-01  9.358e-01  -0.257 0.797124    \nshot_typedrop                  3.782e-01  1.004e+00   0.377 0.706293    \nshot_typelob                  -5.341e-01  8.359e-01  -0.639 0.522840    \nshot_typenet shot             -1.946e+00  8.648e-01  -2.250 0.024432 *  \nshot_typeother                 8.204e-01  8.124e-01   1.010 0.312528    \nshot_typepush                 -3.872e-01  9.106e-01  -0.425 0.670676    \nshot_typereturn net           -1.197e+00  7.531e-01  -1.589 0.112001    \nshot_typerush                  2.239e+00  7.498e-01   2.986 0.002828 ** \nshot_typesmash                 2.166e+00  6.431e-01   3.368 0.000756 ***\nshot_typewrist smash           2.973e+00  1.031e+00   2.884 0.003930 ** \nbackhandbackhand              -8.396e-01  3.948e-01  -2.127 0.033434 *  \nchou_x                         2.704e-03  3.265e-03   0.828 0.407511    \nchou_y                        -4.212e-03  1.979e-03  -2.128 0.033301 *  \nopp_x                         -1.994e-03  4.307e-03  -0.463 0.643443    \nopp_y                         -5.606e-03  2.190e-03  -2.559 0.010492 *  \nshuttle_x                      4.625e-04  1.383e-03   0.334 0.738110    \nshuttle_y                      5.467e-04  1.039e-03   0.526 0.598756    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 544.73  on 408  degrees of freedom\nResidual deviance: 343.05  on 375  degrees of freedom\nAIC: 411.05\n\nNumber of Fisher Scoring iterations: 5\n\n\nCode\n# Assumption 2: Multicollinearity\n\n# between categorical factors \n# opponent, set, round, rally_phase, shot_type, backhand\ncategorical_factors &lt;- c(\"opponent\", \"round\", \"set\", \n                         \"rally_phase\", \"shot_type\", \n                         \"backhand\", \"tournament\")\n\ncramers_v_calc &lt;- function(factor1, factor2, data) {\n  contingency_table &lt;- table(data[[factor1]], data[[factor2]])\n  as.numeric(cramersV(contingency_table))\n}\n\ncram_matrix = matrix(NA, 7, 7, \n                     dimnames = list(categorical_factors, \n                                     categorical_factors))\n\nfor (i in 1:7) {\n  for (j in 1:7) {\n    if (i == j) {\n      cram_matrix[i, j] = 1  \n    } else {\n      cram_matrix[i, j] = cramers_v_calc(categorical_factors[i], \n                                         categorical_factors[j], \n                                         final_stroke_data)\n    }\n  }\n}\n\n\nWarning in stats::chisq.test(...): Chi-squared approximation may be incorrect\nWarning in stats::chisq.test(...): Chi-squared approximation may be incorrect\nWarning in stats::chisq.test(...): Chi-squared approximation may be incorrect\nWarning in stats::chisq.test(...): Chi-squared approximation may be incorrect\nWarning in stats::chisq.test(...): Chi-squared approximation may be incorrect\nWarning in stats::chisq.test(...): Chi-squared approximation may be incorrect\nWarning in stats::chisq.test(...): Chi-squared approximation may be incorrect\nWarning in stats::chisq.test(...): Chi-squared approximation may be incorrect\nWarning in stats::chisq.test(...): Chi-squared approximation may be incorrect\nWarning in stats::chisq.test(...): Chi-squared approximation may be incorrect\nWarning in stats::chisq.test(...): Chi-squared approximation may be incorrect\nWarning in stats::chisq.test(...): Chi-squared approximation may be incorrect\nWarning in stats::chisq.test(...): Chi-squared approximation may be incorrect\nWarning in stats::chisq.test(...): Chi-squared approximation may be incorrect\nWarning in stats::chisq.test(...): Chi-squared approximation may be incorrect\nWarning in stats::chisq.test(...): Chi-squared approximation may be incorrect\nWarning in stats::chisq.test(...): Chi-squared approximation may be incorrect\nWarning in stats::chisq.test(...): Chi-squared approximation may be incorrect\nWarning in stats::chisq.test(...): Chi-squared approximation may be incorrect\nWarning in stats::chisq.test(...): Chi-squared approximation may be incorrect\nWarning in stats::chisq.test(...): Chi-squared approximation may be incorrect\nWarning in stats::chisq.test(...): Chi-squared approximation may be incorrect\nWarning in stats::chisq.test(...): Chi-squared approximation may be incorrect\nWarning in stats::chisq.test(...): Chi-squared approximation may be incorrect\n\n\nCode\ncram_matrix &lt;- round(cram_matrix, 2)\n\n# https://www.datacamp.com/tutorial/variance-inflation-factor\nplot_matrix_heatmap &lt;- function(matrix) {\n  melted_matrix &lt;- melt(matrix) \n  \n  # plot heatmap\n  ggplot(data = melted_matrix, \n         aes(x = Var1, y = Var2, fill = value)) +\n    geom_tile(color = \"white\") +\n    scale_fill_gradient2(\n      low = \"blue\", high = \"red\", mid = \"white\", \n      midpoint = 0, limit = c(-1, 1), space = \"Lab\"\n    ) +\n    theme_minimal() +\n    labs(x = \"\", y = \"\") +\n    geom_text(aes(label = round(value, 2)))\n}\n\nplot_matrix_heatmap(cram_matrix)\n\n\n\n\n\n\n\n\n\nCode\n# round is highly correlated with opponent\n# tournament is highly correlated with round and opponent\n# keep only one of them!\n\n# between numeric factors \n# rally_length, chou_x, chou_y, opp_x, opp_y, shuttle_x, shuttle_y\nnumeric_factors &lt;- final_stroke_data |&gt;\n  select(year, rally_length, chou_x, chou_y,\n         opp_x, opp_y, shuttle_x, shuttle_y)\n\ncorr_matrix &lt;- round(cor(numeric_factors), 2)\nplot_matrix_heatmap(corr_matrix)\n\n\n\n\n\n\n\n\n\nCode\n# shuttle_y and chou_y are highly negatively correlated\n# shuttle_y and opp_y are positively correlated\n# opp_y and chou_y are negatively correlated\n# opp_x and chou_x are positively correlated\n# https://www.researchgate.net/publication/229748502_Multicolinearity_in_regression_models_with_multiple_distance_measures\n# https://www.researchgate.net/publication/378318969_Engineering_Features_from_Raw_Sensor_Data_to_Analyse_Player_Movements_during_Competition\n# derive spatial features such as orthogonal distances\n\n# derive orthogonal distances\nfinal_stroke_data &lt;- final_stroke_data |&gt;\n  mutate(\n    # calculate euclidean dist between chou and opp\n    chou_opp_vx = opp_x - chou_x,\n    chou_opp_vy = opp_y - chou_y,\n    chou_opp_dist = sqrt(chou_opp_vx^2 + chou_opp_vy^2),\n    \n    # chou-opp unit vector \n    chou_opp_uvx = if_else(chou_opp_dist == 0, 0, chou_opp_vx/chou_opp_dist),\n    chou_opp_uvy = if_else(chou_opp_dist == 0, 0, chou_opp_vy/chou_opp_dist),\n    # chou-opp perpendicular unit vector \n    chou_opp_uvx_perp = -chou_opp_uvy,\n    chou_opp_uvy_perp = chou_opp_uvx,\n    \n    # calculate euclidean dist between chou and shuttle\n    chou_shuttle_vx = shuttle_x - chou_x,\n    chou_shuttle_vy = shuttle_y - chou_y,\n    chou_shuttle_dist = sqrt(chou_shuttle_vx^2 + chou_shuttle_vy^2),\n    \n    # shuttle parallel and perpendicular position relative to chou-opp\n    chou_shuttle_paral = chou_shuttle_vx * chou_opp_uvx + \n      chou_shuttle_vy * chou_opp_uvy,\n    chou_shuttle_perp  = chou_shuttle_vx * chou_opp_uvx_perp + \n      chou_shuttle_vy * chou_opp_uvy_perp\n  )\n\n# model with derived orthogonal distances instead of raw (x,y) coordinates\nmodel3 &lt;- glm(chou_win ~ year + tournament + opponent + round + set + \n                rally_phase + rally_length + shot_type + \n                backhand + chou_opp_dist + chou_shuttle_paral + \n                chou_shuttle_perp, \n              data = final_stroke_data, family = binomial(link = \"logit\"))\nsummary(model3)\n\n\n\nCall:\nglm(formula = chou_win ~ year + tournament + opponent + round + \n    set + rally_phase + rally_length + shot_type + backhand + \n    chou_opp_dist + chou_shuttle_paral + chou_shuttle_perp, family = binomial(link = \"logit\"), \n    data = final_stroke_data)\n\nCoefficients: (4 not defined because of singularities)\n                                Estimate Std. Error z value Pr(&gt;|z|)    \n(Intercept)                   -1.622e+03  1.129e+03  -1.437 0.150746    \nyear                           8.013e-01  5.592e-01   1.433 0.151876    \ntournamentFuzhou Open         -1.338e+00  5.946e-01  -2.250 0.024454 *  \ntournamentIndonesia Open      -3.062e+00  1.313e+00  -2.332 0.019726 *  \ntournamentKOREA OPEN          -8.973e-01  8.141e-01  -1.102 0.270401    \ntournamentMalaysia Open       -3.948e-01  6.212e-01  -0.636 0.525023    \ntournamentSudirman Cup        -1.978e+00  1.056e+00  -1.872 0.061184 .  \ntournamentWorld Tour Finals   -4.924e-01  7.443e-01  -0.662 0.508267    \nopponentCHEN Long             -1.530e+00  9.992e-01  -1.531 0.125831    \nopponentJonatan CHRISTIE       2.069e+00  8.369e-01   2.473 0.013411 *  \nopponentKento MOMOTA          -1.061e+00  7.599e-01  -1.396 0.162566    \nopponentNG Ka Long Angus              NA         NA      NA       NA    \nround.L                               NA         NA      NA       NA    \nround.Q                               NA         NA      NA       NA    \nround.C                               NA         NA      NA       NA    \nset.L                          6.147e-01  3.563e-01   1.725 0.084478 .  \nset.Q                          2.398e-01  2.750e-01   0.872 0.383184    \nrally_phase.L                 -3.390e-01  2.500e-01  -1.356 0.175082    \nrally_phase.Q                  7.420e-02  2.545e-01   0.292 0.770613    \nrally_length                   3.262e-02  1.710e-02   1.908 0.056370 .  \nshot_typecross-court net shot  4.189e+00  1.151e+00   3.641 0.000272 ***\nshot_typedrive                 1.602e+00  1.031e+00   1.555 0.120016    \nshot_typedrop                  1.908e+00  1.096e+00   1.741 0.081770 .  \nshot_typelob                   6.336e-01  9.342e-01   0.678 0.497594    \nshot_typenet shot              2.044e+00  1.254e+00   1.630 0.103105    \nshot_typeother                 2.507e+00  9.392e-01   2.670 0.007596 ** \nshot_typepush                  5.405e-01  9.707e-01   0.557 0.577615    \nshot_typereturn net            1.871e+00  1.062e+00   1.762 0.078042 .  \nshot_typerush                  4.515e+00  9.937e-01   4.543 5.53e-06 ***\nshot_typesmash                 3.175e+00  7.061e-01   4.497 6.89e-06 ***\nshot_typewrist smash           4.200e+00  1.073e+00   3.914 9.07e-05 ***\nbackhandbackhand              -5.459e-01  4.137e-01  -1.320 0.186945    \nchou_opp_dist                 -6.105e-04  2.342e-03  -0.261 0.794318    \nchou_shuttle_paral             8.751e-03  2.080e-03   4.207 2.58e-05 ***\nchou_shuttle_perp              1.786e-03  1.250e-03   1.429 0.152962    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 544.73  on 408  degrees of freedom\nResidual deviance: 324.32  on 378  degrees of freedom\nAIC: 386.32\n\nNumber of Fisher Scoring iterations: 5\n\n\nCode\n# check multicollinearity of numeric factors again\nnumeric_factors &lt;- final_stroke_data |&gt;\n  select(chou_opp_dist, chou_shuttle_paral, chou_shuttle_perp)\n\ncorr_matrix &lt;- round(cor(numeric_factors), 2)\nplot_matrix_heatmap(corr_matrix)\n\n\n\n\n\n\n\n\n\nCode\n# chou_shuttle_paral and chou_opp_dist are positively correlated\n# remove one of them!\n\n# Model Selection\n# stepwise factor selection procedure\n# fit a null model\nnull_model &lt;- glm(\n  chou_win ~ 1,\n  data = final_stroke_data,\n  family = binomial(link = \"logit\")\n)\n# fit a full model\nfull_model &lt;- glm(\n  chou_win ~ year + tournament + opponent + round + set + rally_phase + rally_length + \n    shot_type + backhand + chou_opp_dist + \n    chou_shuttle_paral + chou_shuttle_perp,\n  data = final_stroke_data,\n  family = binomial(link = \"logit\")\n)\n\nstep_model &lt;- step(\n  null_model,\n  scope = list(lower = null_model, upper = full_model),\n  direction = \"both\",\n  trace = TRUE          \n)\n\n\nStart:  AIC=546.73\nchou_win ~ 1\n\n                     Df Deviance    AIC\n+ shot_type          11   379.25 403.25\n+ chou_shuttle_paral  1   457.84 461.84\n+ backhand            1   494.90 498.90\n+ chou_opp_dist       1   526.64 530.64\n+ chou_shuttle_perp   1   541.83 545.83\n&lt;none&gt;                    544.73 546.73\n+ opponent            4   537.00 547.00\n+ set                 2   541.47 547.47\n+ year                1   543.57 547.57\n+ rally_phase         2   541.60 547.60\n+ rally_length        1   544.20 548.20\n+ round               3   540.38 548.38\n+ tournament          6   537.87 551.87\n\nStep:  AIC=403.25\nchou_win ~ shot_type\n\n                     Df Deviance    AIC\n+ chou_shuttle_paral  1   357.53 383.53\n+ opponent            4   363.44 395.44\n+ year                1   374.98 400.98\n+ backhand            1   375.08 401.08\n+ round               3   373.11 403.11\n&lt;none&gt;                    379.25 403.25\n+ chou_shuttle_perp   1   377.91 403.91\n+ chou_opp_dist       1   378.14 404.14\n+ rally_length        1   378.25 404.25\n+ tournament          6   369.39 405.39\n+ rally_phase         2   377.93 405.93\n+ set                 2   378.73 406.73\n- shot_type          11   544.73 546.73\n\nStep:  AIC=383.53\nchou_win ~ shot_type + chou_shuttle_paral\n\n                     Df Deviance    AIC\n+ opponent            4   341.35 375.35\n+ year                1   352.18 380.18\n+ round               3   349.22 381.22\n&lt;none&gt;                    357.53 383.53\n+ backhand            1   355.60 383.60\n+ rally_length        1   356.00 384.00\n+ chou_shuttle_perp   1   356.09 384.09\n+ tournament          6   346.52 384.52\n+ chou_opp_dist       1   356.64 384.64\n+ set                 2   356.04 386.04\n+ rally_phase         2   356.05 386.05\n- chou_shuttle_paral  1   379.25 403.25\n- shot_type          11   457.84 461.84\n\nStep:  AIC=375.35\nchou_win ~ shot_type + chou_shuttle_paral + opponent\n\n                     Df Deviance    AIC\n+ rally_length        1   338.17 374.17\n&lt;none&gt;                    341.35 375.35\n+ chou_shuttle_perp   1   340.15 376.15\n+ backhand            1   340.34 376.34\n+ year                1   340.94 376.94\n+ chou_opp_dist       1   341.29 377.29\n+ rally_phase         2   339.93 377.93\n+ set                 2   340.03 378.03\n+ round               2   340.81 378.81\n+ tournament          5   337.89 381.89\n- opponent            4   357.53 383.53\n- chou_shuttle_paral  1   363.44 395.44\n- shot_type          11   442.40 454.40\n\nStep:  AIC=374.17\nchou_win ~ shot_type + chou_shuttle_paral + opponent + rally_length\n\n                     Df Deviance    AIC\n&lt;none&gt;                    338.17 374.17\n+ chou_shuttle_perp   1   336.81 374.81\n+ backhand            1   337.05 375.05\n- rally_length        1   341.35 375.35\n+ year                1   337.84 375.84\n+ chou_opp_dist       1   338.12 376.12\n+ rally_phase         2   336.59 376.59\n+ set                 2   337.09 377.09\n+ round               2   337.55 377.55\n+ tournament          5   334.10 380.10\n- opponent            4   356.00 384.00\n- chou_shuttle_paral  1   361.22 395.22\n- shot_type          11   440.13 454.13\n\n\nCode\nsummary(step_model)\n\n\n\nCall:\nglm(formula = chou_win ~ shot_type + chou_shuttle_paral + opponent + \n    rally_length, family = binomial(link = \"logit\"), data = final_stroke_data)\n\nCoefficients:\n                               Estimate Std. Error z value Pr(&gt;|z|)    \n(Intercept)                   -5.202830   1.360753  -3.823 0.000132 ***\nshot_typecross-court net shot  3.527295   1.052685   3.351 0.000806 ***\nshot_typedrive                 1.474430   0.979456   1.505 0.132232    \nshot_typedrop                  2.097873   1.014881   2.067 0.038723 *  \nshot_typelob                   0.598031   0.821577   0.728 0.466671    \nshot_typenet shot              1.606759   1.176518   1.366 0.172036    \nshot_typeother                 2.152643   0.853089   2.523 0.011624 *  \nshot_typepush                  0.818273   0.882518   0.927 0.353821    \nshot_typereturn net            1.423351   0.939846   1.514 0.129911    \nshot_typerush                  4.364417   0.902542   4.836 1.33e-06 ***\nshot_typesmash                 3.199540   0.638840   5.008 5.49e-07 ***\nshot_typewrist smash           4.192354   1.007469   4.161 3.16e-05 ***\nchou_shuttle_paral             0.007603   0.001744   4.360 1.30e-05 ***\nopponentCHEN Long             -0.570509   0.709179  -0.804 0.421129    \nopponentJonatan CHRISTIE       0.702018   0.731136   0.960 0.336968    \nopponentKento MOMOTA          -1.067540   0.652873  -1.635 0.102019    \nopponentNG Ka Long Angus      -0.728052   0.861293  -0.845 0.397943    \nrally_length                   0.029121   0.016417   1.774 0.076089 .  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 544.73  on 408  degrees of freedom\nResidual deviance: 338.17  on 391  degrees of freedom\nAIC: 374.17\n\nNumber of Fisher Scoring iterations: 5\n\n\nCode\n# removed year, tournament, round, \n# set, rally_phase, backhand, chou_opp_dist, chou_shuttle_perp \n\ncar::vif(step_model)\n\n\n                       GVIF Df GVIF^(1/(2*Df))\nshot_type          4.745943 11        1.073351\nchou_shuttle_paral 3.818278  1        1.954041\nopponent           1.373121  4        1.040432\nrally_length       1.101083  1        1.049325\n\n\nCode\n# VIF &lt; 5 for all factors\n# No Multicollinearity \n\n# Interactions\n\nfull_model_int &lt;- glm(\n  chou_win ~ (opponent + rally_length + shot_type + chou_shuttle_paral)^2,\n  data = final_stroke_data,\n  family = binomial(link = \"logit\")\n)\n\n\nWarning: glm.fit: algorithm did not converge\n\n\nWarning: glm.fit: fitted probabilities numerically 0 or 1 occurred\n\n\nCode\nsummary(full_model_int)\n\n\n\nCall:\nglm(formula = chou_win ~ (opponent + rally_length + shot_type + \n    chou_shuttle_paral)^2, family = binomial(link = \"logit\"), \n    data = final_stroke_data)\n\nCoefficients: (9 not defined because of singularities)\n                                                         Estimate Std. Error\n(Intercept)                                             3.625e+15  2.391e+08\nopponentCHEN Long                                      -3.078e+15  1.516e+08\nopponentJonatan CHRISTIE                                1.656e+15  1.609e+08\nopponentKento MOMOTA                                   -3.539e+15  1.433e+08\nopponentNG Ka Long Angus                               -7.531e+15  2.102e+08\nrally_length                                           -1.201e+14  3.702e+06\nshot_typecross-court net shot                          -1.086e+16  2.367e+08\nshot_typedrive                                         -1.146e+16  2.333e+08\nshot_typedrop                                          -1.983e+16  3.276e+08\nshot_typelob                                           -7.855e+15  2.202e+08\nshot_typenet shot                                      -9.964e+15  2.322e+08\nshot_typeother                                         -1.170e+16  2.271e+08\nshot_typepush                                          -1.128e+16  2.399e+08\nshot_typereturn net                                    -8.881e+15  2.206e+08\nshot_typerush                                          -4.222e+15  2.208e+08\nshot_typesmash                                         -6.484e+15  2.132e+08\nshot_typewrist smash                                    1.052e+15  3.827e+08\nchou_shuttle_paral                                      1.009e+13  4.209e+05\nopponentCHEN Long:rally_length                         -2.698e+12  2.182e+06\nopponentJonatan CHRISTIE:rally_length                   6.806e+13  2.812e+06\nopponentKento MOMOTA:rally_length                       1.437e+13  2.007e+06\nopponentNG Ka Long Angus:rally_length                   2.919e+14  4.987e+06\nopponentCHEN Long:shot_typecross-court net shot         7.855e+15  1.424e+08\nopponentJonatan CHRISTIE:shot_typecross-court net shot  3.675e+15  1.512e+08\nopponentKento MOMOTA:shot_typecross-court net shot      6.549e+15  1.344e+08\nopponentNG Ka Long Angus:shot_typecross-court net shot  1.287e+16  1.747e+08\nopponentCHEN Long:shot_typedrive                        7.373e+15  1.428e+08\nopponentJonatan CHRISTIE:shot_typedrive                 5.160e+15  1.698e+08\nopponentKento MOMOTA:shot_typedrive                     7.802e+15  1.431e+08\nopponentNG Ka Long Angus:shot_typedrive                        NA         NA\nopponentCHEN Long:shot_typedrop                                NA         NA\nopponentJonatan CHRISTIE:shot_typedrop                  7.203e+15  2.270e+08\nopponentKento MOMOTA:shot_typedrop                      1.028e+16  1.856e+08\nopponentNG Ka Long Angus:shot_typedrop                         NA         NA\nopponentCHEN Long:shot_typelob                          5.592e+15  1.138e+08\nopponentJonatan CHRISTIE:shot_typelob                   5.900e+15  1.132e+08\nopponentKento MOMOTA:shot_typelob                       3.663e+15  1.033e+08\nopponentNG Ka Long Angus:shot_typelob                          NA         NA\nopponentCHEN Long:shot_typenet shot                     8.431e+15  1.355e+08\nopponentJonatan CHRISTIE:shot_typenet shot              3.098e+15  1.439e+08\nopponentKento MOMOTA:shot_typenet shot                  7.769e+15  1.278e+08\nopponentNG Ka Long Angus:shot_typenet shot              4.802e+15  1.824e+08\nopponentCHEN Long:shot_typeother                        8.468e+15  1.249e+08\nopponentJonatan CHRISTIE:shot_typeother                 1.093e+16  1.358e+08\nopponentKento MOMOTA:shot_typeother                     9.587e+15  1.120e+08\nopponentNG Ka Long Angus:shot_typeother                 6.441e+15  9.937e+07\nopponentCHEN Long:shot_typepush                         9.179e+15  1.299e+08\nopponentJonatan CHRISTIE:shot_typepush                         NA         NA\nopponentKento MOMOTA:shot_typepush                      9.468e+15  1.191e+08\nopponentNG Ka Long Angus:shot_typepush                         NA         NA\nopponentCHEN Long:shot_typereturn net                   4.973e+15  1.174e+08\nopponentJonatan CHRISTIE:shot_typereturn net            1.508e+15  1.251e+08\nopponentKento MOMOTA:shot_typereturn net                5.078e+15  1.095e+08\nopponentNG Ka Long Angus:shot_typereturn net            6.024e+15  2.195e+08\nopponentCHEN Long:shot_typerush                         4.109e+15  1.161e+08\nopponentJonatan CHRISTIE:shot_typerush                  3.717e+15  1.230e+08\nopponentKento MOMOTA:shot_typerush                      4.489e+15  1.099e+08\nopponentNG Ka Long Angus:shot_typerush                  4.426e+15  1.341e+08\nopponentCHEN Long:shot_typesmash                        7.924e+15  9.273e+07\nopponentJonatan CHRISTIE:shot_typesmash                 4.475e+15  9.778e+07\nopponentKento MOMOTA:shot_typesmash                     7.082e+15  8.516e+07\nopponentNG Ka Long Angus:shot_typesmash                        NA         NA\nopponentCHEN Long:shot_typewrist smash                         NA         NA\nopponentJonatan CHRISTIE:shot_typewrist smash           1.706e+15  1.235e+08\nopponentKento MOMOTA:shot_typewrist smash               6.617e+15  1.111e+08\nopponentNG Ka Long Angus:shot_typewrist smash                  NA         NA\nopponentCHEN Long:chou_shuttle_paral                   -1.259e+13  2.517e+05\nopponentJonatan CHRISTIE:chou_shuttle_paral            -1.958e+13  2.653e+05\nopponentKento MOMOTA:chou_shuttle_paral                -1.322e+13  2.448e+05\nopponentNG Ka Long Angus:chou_shuttle_paral             2.458e+12  4.101e+05\nrally_length:shot_typecross-court net shot              1.756e+14  3.370e+06\nrally_length:shot_typedrive                             9.512e+13  5.444e+06\nrally_length:shot_typedrop                             -1.795e+14  6.621e+06\nrally_length:shot_typelob                               1.666e+14  2.622e+06\nrally_length:shot_typenet shot                          7.850e+13  3.302e+06\nrally_length:shot_typeother                             5.065e+13  2.613e+06\nrally_length:shot_typepush                              9.645e+13  3.036e+06\nrally_length:shot_typereturn net                        1.391e+14  2.696e+06\nrally_length:shot_typerush                              7.981e+13  2.594e+06\nrally_length:shot_typesmash                             3.144e+13  1.862e+06\nrally_length:shot_typewrist smash                      -2.868e+13  4.534e+06\nrally_length:chou_shuttle_paral                         1.451e+11  5.218e+03\nshot_typecross-court net shot:chou_shuttle_paral        1.830e+13  4.021e+05\nshot_typedrive:chou_shuttle_paral                       8.304e+12  3.598e+05\nshot_typedrop:chou_shuttle_paral                        3.275e+13  6.331e+05\nshot_typelob:chou_shuttle_paral                         2.526e+12  3.546e+05\nshot_typenet shot:chou_shuttle_paral                    9.234e+12  3.980e+05\nshot_typeother:chou_shuttle_paral                       7.336e+12  3.598e+05\nshot_typepush:chou_shuttle_paral                        1.780e+12  3.811e+05\nshot_typereturn net:chou_shuttle_paral                  7.651e+12  3.457e+05\nshot_typerush:chou_shuttle_paral                        2.914e+12  3.521e+05\nshot_typesmash:chou_shuttle_paral                       3.245e+12  3.507e+05\nshot_typewrist smash:chou_shuttle_paral                -7.994e+12  7.316e+05\n                                                         z value Pr(&gt;|z|)    \n(Intercept)                                             15159762   &lt;2e-16 ***\nopponentCHEN Long                                      -20309402   &lt;2e-16 ***\nopponentJonatan CHRISTIE                                10292470   &lt;2e-16 ***\nopponentKento MOMOTA                                   -24704502   &lt;2e-16 ***\nopponentNG Ka Long Angus                               -35828593   &lt;2e-16 ***\nrally_length                                           -32436191   &lt;2e-16 ***\nshot_typecross-court net shot                          -45875952   &lt;2e-16 ***\nshot_typedrive                                         -49125057   &lt;2e-16 ***\nshot_typedrop                                          -60519642   &lt;2e-16 ***\nshot_typelob                                           -35674194   &lt;2e-16 ***\nshot_typenet shot                                      -42906059   &lt;2e-16 ***\nshot_typeother                                         -51501402   &lt;2e-16 ***\nshot_typepush                                          -47012919   &lt;2e-16 ***\nshot_typereturn net                                    -40258191   &lt;2e-16 ***\nshot_typerush                                          -19122747   &lt;2e-16 ***\nshot_typesmash                                         -30410316   &lt;2e-16 ***\nshot_typewrist smash                                     2748630   &lt;2e-16 ***\nchou_shuttle_paral                                      23980815   &lt;2e-16 ***\nopponentCHEN Long:rally_length                          -1236233   &lt;2e-16 ***\nopponentJonatan CHRISTIE:rally_length                   24206446   &lt;2e-16 ***\nopponentKento MOMOTA:rally_length                        7159884   &lt;2e-16 ***\nopponentNG Ka Long Angus:rally_length                   58526107   &lt;2e-16 ***\nopponentCHEN Long:shot_typecross-court net shot         55151414   &lt;2e-16 ***\nopponentJonatan CHRISTIE:shot_typecross-court net shot  24299440   &lt;2e-16 ***\nopponentKento MOMOTA:shot_typecross-court net shot      48731315   &lt;2e-16 ***\nopponentNG Ka Long Angus:shot_typecross-court net shot  73666690   &lt;2e-16 ***\nopponentCHEN Long:shot_typedrive                        51633757   &lt;2e-16 ***\nopponentJonatan CHRISTIE:shot_typedrive                 30394387   &lt;2e-16 ***\nopponentKento MOMOTA:shot_typedrive                     54513896   &lt;2e-16 ***\nopponentNG Ka Long Angus:shot_typedrive                       NA       NA    \nopponentCHEN Long:shot_typedrop                               NA       NA    \nopponentJonatan CHRISTIE:shot_typedrop                  31737720   &lt;2e-16 ***\nopponentKento MOMOTA:shot_typedrop                      55382379   &lt;2e-16 ***\nopponentNG Ka Long Angus:shot_typedrop                        NA       NA    \nopponentCHEN Long:shot_typelob                          49142669   &lt;2e-16 ***\nopponentJonatan CHRISTIE:shot_typelob                   52096418   &lt;2e-16 ***\nopponentKento MOMOTA:shot_typelob                       35454039   &lt;2e-16 ***\nopponentNG Ka Long Angus:shot_typelob                         NA       NA    \nopponentCHEN Long:shot_typenet shot                     62211474   &lt;2e-16 ***\nopponentJonatan CHRISTIE:shot_typenet shot              21522446   &lt;2e-16 ***\nopponentKento MOMOTA:shot_typenet shot                  60775445   &lt;2e-16 ***\nopponentNG Ka Long Angus:shot_typenet shot              26328973   &lt;2e-16 ***\nopponentCHEN Long:shot_typeother                        67790439   &lt;2e-16 ***\nopponentJonatan CHRISTIE:shot_typeother                 80474113   &lt;2e-16 ***\nopponentKento MOMOTA:shot_typeother                     85573394   &lt;2e-16 ***\nopponentNG Ka Long Angus:shot_typeother                 64818652   &lt;2e-16 ***\nopponentCHEN Long:shot_typepush                         70670710   &lt;2e-16 ***\nopponentJonatan CHRISTIE:shot_typepush                        NA       NA    \nopponentKento MOMOTA:shot_typepush                      79526930   &lt;2e-16 ***\nopponentNG Ka Long Angus:shot_typepush                        NA       NA    \nopponentCHEN Long:shot_typereturn net                   42343142   &lt;2e-16 ***\nopponentJonatan CHRISTIE:shot_typereturn net            12057391   &lt;2e-16 ***\nopponentKento MOMOTA:shot_typereturn net                46381525   &lt;2e-16 ***\nopponentNG Ka Long Angus:shot_typereturn net            27444203   &lt;2e-16 ***\nopponentCHEN Long:shot_typerush                         35378744   &lt;2e-16 ***\nopponentJonatan CHRISTIE:shot_typerush                  30225769   &lt;2e-16 ***\nopponentKento MOMOTA:shot_typerush                      40845564   &lt;2e-16 ***\nopponentNG Ka Long Angus:shot_typerush                  33015266   &lt;2e-16 ***\nopponentCHEN Long:shot_typesmash                        85453031   &lt;2e-16 ***\nopponentJonatan CHRISTIE:shot_typesmash                 45762751   &lt;2e-16 ***\nopponentKento MOMOTA:shot_typesmash                     83168794   &lt;2e-16 ***\nopponentNG Ka Long Angus:shot_typesmash                       NA       NA    \nopponentCHEN Long:shot_typewrist smash                        NA       NA    \nopponentJonatan CHRISTIE:shot_typewrist smash           13811975   &lt;2e-16 ***\nopponentKento MOMOTA:shot_typewrist smash               59578390   &lt;2e-16 ***\nopponentNG Ka Long Angus:shot_typewrist smash                 NA       NA    \nopponentCHEN Long:chou_shuttle_paral                   -50001018   &lt;2e-16 ***\nopponentJonatan CHRISTIE:chou_shuttle_paral            -73783854   &lt;2e-16 ***\nopponentKento MOMOTA:chou_shuttle_paral                -53995484   &lt;2e-16 ***\nopponentNG Ka Long Angus:chou_shuttle_paral              5992497   &lt;2e-16 ***\nrally_length:shot_typecross-court net shot              52125037   &lt;2e-16 ***\nrally_length:shot_typedrive                             17472019   &lt;2e-16 ***\nrally_length:shot_typedrop                             -27110449   &lt;2e-16 ***\nrally_length:shot_typelob                               63545902   &lt;2e-16 ***\nrally_length:shot_typenet shot                          23773920   &lt;2e-16 ***\nrally_length:shot_typeother                             19382732   &lt;2e-16 ***\nrally_length:shot_typepush                              31766041   &lt;2e-16 ***\nrally_length:shot_typereturn net                        51607212   &lt;2e-16 ***\nrally_length:shot_typerush                              30768373   &lt;2e-16 ***\nrally_length:shot_typesmash                             16881863   &lt;2e-16 ***\nrally_length:shot_typewrist smash                       -6325839   &lt;2e-16 ***\nrally_length:chou_shuttle_paral                         27804405   &lt;2e-16 ***\nshot_typecross-court net shot:chou_shuttle_paral        45511601   &lt;2e-16 ***\nshot_typedrive:chou_shuttle_paral                       23078189   &lt;2e-16 ***\nshot_typedrop:chou_shuttle_paral                        51731859   &lt;2e-16 ***\nshot_typelob:chou_shuttle_paral                          7122694   &lt;2e-16 ***\nshot_typenet shot:chou_shuttle_paral                    23197098   &lt;2e-16 ***\nshot_typeother:chou_shuttle_paral                       20387592   &lt;2e-16 ***\nshot_typepush:chou_shuttle_paral                         4671607   &lt;2e-16 ***\nshot_typereturn net:chou_shuttle_paral                  22133100   &lt;2e-16 ***\nshot_typerush:chou_shuttle_paral                         8275914   &lt;2e-16 ***\nshot_typesmash:chou_shuttle_paral                        9252266   &lt;2e-16 ***\nshot_typewrist smash:chou_shuttle_paral                -10927477   &lt;2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance:  544.73  on 408  degrees of freedom\nResidual deviance: 4253.15  on 325  degrees of freedom\nAIC: 4421.2\n\nNumber of Fisher Scoring iterations: 25\n\n\nCode\n# std error are crazy \n\nstep_model_int &lt;- step(\n  step_model, \n  scope = list(lower = step_model, upper = full_model_int),\n  direction = \"both\"\n)\n\n\nStart:  AIC=374.17\nchou_win ~ shot_type + chou_shuttle_paral + opponent + rally_length\n\n                                  Df Deviance    AIC\n&lt;none&gt;                                 338.17 374.17\n+ rally_length:chou_shuttle_paral  1   337.96 375.96\n+ opponent:rally_length            4   333.89 377.89\n+ shot_type:chou_shuttle_paral    11   320.17 378.17\n+ opponent:chou_shuttle_paral      4   335.41 379.41\n+ rally_length:shot_type          11   323.21 381.21\n+ opponent:shot_type              35   297.44 403.44\n\n\nCode\n# no interaction terms retained \nsummary(step_model_int)\n\n\n\nCall:\nglm(formula = chou_win ~ shot_type + chou_shuttle_paral + opponent + \n    rally_length, family = binomial(link = \"logit\"), data = final_stroke_data)\n\nCoefficients:\n                               Estimate Std. Error z value Pr(&gt;|z|)    \n(Intercept)                   -5.202830   1.360753  -3.823 0.000132 ***\nshot_typecross-court net shot  3.527295   1.052685   3.351 0.000806 ***\nshot_typedrive                 1.474430   0.979456   1.505 0.132232    \nshot_typedrop                  2.097873   1.014881   2.067 0.038723 *  \nshot_typelob                   0.598031   0.821577   0.728 0.466671    \nshot_typenet shot              1.606759   1.176518   1.366 0.172036    \nshot_typeother                 2.152643   0.853089   2.523 0.011624 *  \nshot_typepush                  0.818273   0.882518   0.927 0.353821    \nshot_typereturn net            1.423351   0.939846   1.514 0.129911    \nshot_typerush                  4.364417   0.902542   4.836 1.33e-06 ***\nshot_typesmash                 3.199540   0.638840   5.008 5.49e-07 ***\nshot_typewrist smash           4.192354   1.007469   4.161 3.16e-05 ***\nchou_shuttle_paral             0.007603   0.001744   4.360 1.30e-05 ***\nopponentCHEN Long             -0.570509   0.709179  -0.804 0.421129    \nopponentJonatan CHRISTIE       0.702018   0.731136   0.960 0.336968    \nopponentKento MOMOTA          -1.067540   0.652873  -1.635 0.102019    \nopponentNG Ka Long Angus      -0.728052   0.861293  -0.845 0.397943    \nrally_length                   0.029121   0.016417   1.774 0.076089 .  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 544.73  on 408  degrees of freedom\nResidual deviance: 338.17  on 391  degrees of freedom\nAIC: 374.17\n\nNumber of Fisher Scoring iterations: 5\n\n\nCode\n# Overdisperson\n# https://www.highstat.com/Books/BGS/GLMGLMM/pdfs/HILBE-Can_binary_logistic_models_be_overdispersed2Jul2013.pdf\n# For a true binary logistic model, there is no overdispersion, \n# or under-dispersion. Each observation is independent of one another. \n# But what happens when we model a logistic regression where the \n# data is clustered, ie. where the observations are not independent? \n# Some analysts then claim as a consequence that the model is not \n# a true Bernoulli model - it’s a quasilikelihood model\n\nquasi_model &lt;- glm(\n  chou_win ~ shot_type + chou_shuttle_paral + opponent + \n    rally_length,\n  data = final_stroke_data,\n  family = quasibinomial(link = \"logit\")\n)\nsummary(quasi_model)\n\n\n\nCall:\nglm(formula = chou_win ~ shot_type + chou_shuttle_paral + opponent + \n    rally_length, family = quasibinomial(link = \"logit\"), data = final_stroke_data)\n\nCoefficients:\n                               Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)                   -5.202830   1.379998  -3.770 0.000188 ***\nshot_typecross-court net shot  3.527295   1.067574   3.304 0.001041 ** \nshot_typedrive                 1.474430   0.993308   1.484 0.138518    \nshot_typedrop                  2.097873   1.029234   2.038 0.042194 *  \nshot_typelob                   0.598031   0.833196   0.718 0.473337    \nshot_typenet shot              1.606759   1.193157   1.347 0.178875    \nshot_typeother                 2.152643   0.865155   2.488 0.013256 *  \nshot_typepush                  0.818273   0.894999   0.914 0.361137    \nshot_typereturn net            1.423351   0.953138   1.493 0.136157    \nshot_typerush                  4.364417   0.915307   4.768 2.63e-06 ***\nshot_typesmash                 3.199540   0.647875   4.939 1.17e-06 ***\nshot_typewrist smash           4.192354   1.021718   4.103 4.96e-05 ***\nchou_shuttle_paral             0.007603   0.001769   4.299 2.17e-05 ***\nopponentCHEN Long             -0.570509   0.719209  -0.793 0.428116    \nopponentJonatan CHRISTIE       0.702018   0.741477   0.947 0.344334    \nopponentKento MOMOTA          -1.067540   0.662107  -1.612 0.107695    \nopponentNG Ka Long Angus      -0.728052   0.873474  -0.834 0.405064    \nrally_length                   0.029121   0.016649   1.749 0.081057 .  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for quasibinomial family taken to be 1.028486)\n\n    Null deviance: 544.73  on 408  degrees of freedom\nResidual deviance: 338.17  on 391  degrees of freedom\nAIC: NA\n\nNumber of Fisher Scoring iterations: 5\n\n\nCode\n# the standard errors are a teeny bit lower\n\n# I think final shots of rallies are not 100% independent\n# They could depend on year, tournament, round, opponent, rally_phase\n# I tested them as fixed effects and only \n# opponent was significant\n# tournament was highly correlated to round and opponent\n# Do I consider the other ones random effects now? \n# Let's see if that improves my model \n\nm_mixed &lt;- glmer(\n  chou_win ~ shot_type + chou_shuttle_paral + opponent + \n    rally_length +                      \n    (1 | year) +                                \n    (1 | tournament) +                               \n    (1 | set) + \n    (1 | rally_phase),                             \n  data = final_stroke_data,\n  family = binomial(link = \"logit\")\n)\n\n\nboundary (singular) fit: see help('isSingular')\n\n\nCode\nsummary(m_mixed)\n\n\nGeneralized linear mixed model fit by maximum likelihood (Laplace\n  Approximation) [glmerMod]\n Family: binomial  ( logit )\nFormula: chou_win ~ shot_type + chou_shuttle_paral + opponent + rally_length +  \n    (1 | year) + (1 | tournament) + (1 | set) + (1 | rally_phase)\n   Data: final_stroke_data\n\n      AIC       BIC    logLik -2*log(L)  df.resid \n    382.2     470.5    -169.1     338.2       387 \n\nScaled residuals: \n    Min      1Q  Median      3Q     Max \n-5.9409 -0.4427 -0.1771  0.5160  4.3248 \n\nRandom effects:\n Groups      Name        Variance Std.Dev.\n tournament  (Intercept) 0        0       \n rally_phase (Intercept) 0        0       \n set         (Intercept) 0        0       \n year        (Intercept) 0        0       \nNumber of obs: 409, groups:  tournament, 7; rally_phase, 3; set, 3; year, 2\n\nFixed effects:\n                               Estimate Std. Error z value Pr(&gt;|z|)    \n(Intercept)                   -5.202830   1.360129  -3.825 0.000131 ***\nshot_typecross-court net shot  3.527295   1.052227   3.352 0.000802 ***\nshot_typedrive                 1.474430   0.979361   1.506 0.132195    \nshot_typedrop                  2.097873   1.014790   2.067 0.038706 *  \nshot_typelob                   0.598031   0.821484   0.728 0.466620    \nshot_typenet shot              1.606759   1.176081   1.366 0.171877    \nshot_typeother                 2.152643   0.852964   2.524 0.011612 *  \nshot_typepush                  0.818273   0.882420   0.927 0.353768    \nshot_typereturn net            1.423351   0.939513   1.515 0.129775    \nshot_typerush                  4.364417   0.902242   4.837 1.32e-06 ***\nshot_typesmash                 3.199540   0.638759   5.009 5.47e-07 ***\nshot_typewrist smash           4.192354   1.007376   4.162 3.16e-05 ***\nchou_shuttle_paral             0.007603   0.001743   4.363 1.28e-05 ***\nopponentCHEN Long             -0.570509   0.709199  -0.804 0.421142    \nopponentJonatan CHRISTIE       0.702018   0.731160   0.960 0.336984    \nopponentKento MOMOTA          -1.067540   0.652891  -1.635 0.102029    \nopponentNG Ka Long Angus      -0.728052   0.861312  -0.845 0.397953    \nrally_length                   0.029121   0.016417   1.774 0.076089 .  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n\nCorrelation matrix not shown by default, as p = 18 &gt; 12.\nUse print(x, correlation=TRUE)  or\n    vcov(x)        if you need it\n\n\noptimizer (Nelder_Mead) convergence code: 0 (OK)\nboundary (singular) fit: see help('isSingular')\n\n\nCode\n# The variance of all random effects is 0\n# mixed effect model is not needed\n\n# Outliers\nplot(residuals(step_model_int, type = \"pearson\"),\n     ylab = \"Pearson Residuals\")\n\n\n\n\n\n\n\n\n\nCode\n# most residual values fall between (−2, 2) \n# but there are values beyond ±3 which \n# indicates there are outliers\n\n# identify how many outliers\nres_p &lt;- residuals(step_model_int, type = \"pearson\")\nn_out &lt;- sum(abs(res_p) &gt; 2, na.rm = TRUE)\nn_out\n\n\n[1] 24\n\n\nCode\nindex_out &lt;- which(abs(res_p) &gt; 2)\noutliers &lt;- final_stroke_data[index_out,] |&gt;\n  mutate(\n    res_p = res_p[index_out]\n  ) |&gt;\n  select(\n    res_p, shot_type, rally_length, opponent, chou_shuttle_paral, everything()\n  )\n\n# identify influential points\ncooks_thres &lt;- round(4/nobs(step_model_int),2)\nplot(cooks.distance(step_model_int))\nabline(h = cooks_thres, lty = 2)\n\n\n\n\n\n\n\n\n\nCode\n# identify how many influential points\ncooks_d &lt;- round(cooks.distance(step_model_int), 2)\nn_inf &lt;- sum(cooks_d &gt; cooks_thres, na.rm = TRUE)\nn_inf\n\n\n[1] 27\n\n\nCode\n# identify points that are influential\nindex_inf &lt;- which(cooks_d &gt; cooks_thres)\n\ninfluential &lt;- final_stroke_data[index_inf,] |&gt;\n  mutate(\n    cooks_d = cooks_d[index_inf]\n    ) \n\n# examine influential points\ninfluential\n\n\n# A tibble: 27 × 30\n    year tournament       match_id opponent round set   rally_phase rally_length\n   &lt;dbl&gt; &lt;fct&gt;               &lt;dbl&gt; &lt;fct&gt;    &lt;ord&gt; &lt;ord&gt; &lt;ord&gt;              &lt;dbl&gt;\n 1  2019 Fuzhou Open          9771 Kento M… Fina… 3     early                 32\n 2  2019 Fuzhou Open          9771 Kento M… Fina… 3     early                 14\n 3  2019 World Tour Fina…     8080 CHEN Lo… Grou… 1     late                  20\n 4  2019 World Tour Fina…     8080 CHEN Lo… Grou… 1     late                   2\n 5  2019 World Tour Fina…     8080 CHEN Lo… Grou… 1     late                   6\n 6  2019 KOREA OPEN           6266 Kento M… Fina… 2     early                  9\n 7  2019 Denmark Open         4627 CHEN Lo… Quar… 1     late                   6\n 8  2019 Denmark Open         4627 CHEN Lo… Quar… 1     late                  16\n 9  2019 Denmark Open         4627 CHEN Lo… Quar… 1     late                   2\n10  2019 Denmark Open         4627 CHEN Lo… Quar… 2     mid                   19\n# ℹ 17 more rows\n# ℹ 22 more variables: chou_win &lt;fct&gt;, shot_type &lt;fct&gt;, backhand &lt;fct&gt;,\n#   chou_x &lt;dbl&gt;, chou_y &lt;dbl&gt;, opp_x &lt;dbl&gt;, opp_y &lt;dbl&gt;, shuttle_x &lt;dbl&gt;,\n#   shuttle_y &lt;dbl&gt;, chou_opp_vx &lt;dbl&gt;, chou_opp_vy &lt;dbl&gt;, chou_opp_dist &lt;dbl&gt;,\n#   chou_opp_uvx &lt;dbl&gt;, chou_opp_uvy &lt;dbl&gt;, chou_opp_uvx_perp &lt;dbl&gt;,\n#   chou_opp_uvy_perp &lt;dbl&gt;, chou_shuttle_vx &lt;dbl&gt;, chou_shuttle_vy &lt;dbl&gt;,\n#   chou_shuttle_dist &lt;dbl&gt;, chou_shuttle_paral &lt;dbl&gt;, …\n\n\nCode\nlibrary(purrr)\n\nplot_badminton_court &lt;- function(court_coordinates) {\n  # assume columns: upleft_x, upleft_y, upright_x, upright_y,\n  #                 downleft_x, downleft_y, downright_x, downright_y\n  cc &lt;- court_coordinates %&gt;% slice(1)  # use first row if multiple\n  \n  # Court polygon in UL -&gt; UR -&gt; DR -&gt; DL -&gt; UL order\n  court_poly &lt;- tibble::tibble(\n    x = c(cc$upleft_x,  cc$upright_x,  cc$downright_x, cc$downleft_x, cc$upleft_x),\n    y = c(cc$upleft_y,  cc$upright_y,  cc$downright_y, cc$downleft_y, cc$upleft_y)\n  )\n  \n  # Net: connect midpoint of left and right sidelines\n  left_mid  &lt;- c(x = mean(c(cc$upleft_x,  cc$downleft_x)),\n                 y = mean(c(cc$upleft_y,  cc$downleft_y)))\n  right_mid &lt;- c(x = mean(c(cc$upright_x, cc$downright_x)),\n                 y = mean(c(cc$upright_y, cc$downright_y)))\n  \n  net_seg &lt;- tibble::tibble(\n    x = c(left_mid[\"x\"], right_mid[\"x\"]),\n    y = c(left_mid[\"y\"], right_mid[\"y\"])\n  )\n  \n  ggplot() +\n    geom_path(data = court_poly, aes(x, y), linewidth = 1) +\n    geom_segment(\n      data = net_seg,\n      aes(x = x[1], y = y[1], xend = x[2], yend = y[2]),\n      linewidth = 1\n    ) +\n    coord_equal() +\n    theme_void()\n}\n\np &lt;- plot_badminton_court(court_coordinates) +\n  geom_point(\n    data = final_stroke_data,\n    aes(\n      x = shuttle_x,\n      y = shuttle_y,\n      color = factor(chou_win, labels = c(\"Loss\", \"Win\"))\n    ),\n    alpha = 0.6,\n    size = 2\n  ) +\n  scale_color_manual(values = c(\"Loss\" = \"red\", \"Win\" = \"blue\")) +\n  labs(color = \"Rally Outcome\")\n\np +\n  geom_point(\n    data = influential,\n    aes(\n      x = shuttle_x, y = shuttle_y,\n      fill = factor(chou_win, labels = c(\"Loss\", \"Win\"))\n    ),\n    shape = 21, size = 3.8, stroke = 1.2, color = \"black\"\n  ) +\n  scale_fill_manual(values = c(\"Loss\" = \"red\", \"Win\" = \"blue\"), guide = \"none\")\n\n\nWarning in geom_segment(data = net_seg, aes(x = x[1], y = y[1], xend = x[2], : All aesthetics have length 1, but the data has 2 rows.\nℹ Please consider using `annotate()` or provide this layer with data containing\n  a single row.\n\n\n\n\n\n\n\n\n\nCode\n# influential points are not the ones that are outside of the court\ndev.off()\n\n\nnull device \n          1 \n\n\nCode\n# 0) Tag influential rows (uses your existing index_inf)\nfinal_stroke_data &lt;- final_stroke_data |&gt;\n  mutate(is_inf = FALSE)\nfinal_stroke_data$is_inf[index_inf] &lt;- TRUE\n\n# 1) Opponent (stacked count; black part = influential)\nggplot(final_stroke_data, aes(x = opponent, fill = is_inf)) +\n  geom_bar() +\n  scale_fill_manual(values = c(`FALSE` = \"grey80\", `TRUE` = \"black\"),\n                    labels = c(\"All\", \"Influential\")) +\n  labs(x = \"Opponent\", y = \"Count\", fill = NULL,\n       title = \"Opponent distribution with influential highlighted\") +\n  coord_flip() +\n  theme_minimal()\n# Are influential points mostly from a single opponent? No\n\n# 2) Rally length (overlay outline for influential)\nggplot(final_stroke_data, aes(x = rally_length)) +\n  geom_histogram(binwidth = 1, fill = \"grey80\", color = \"white\") +\n  geom_histogram(data = subset(final_stroke_data, is_inf),\n                 aes(x = rally_length),\n                 binwidth = 1, fill = NA, color = \"black\", linewidth = 1) +\n  labs(x = \"Rally length (strokes)\", y = \"Count\",\n       title = \"Rally length with influential overlay\") +\n  theme_minimal()\n#Do influential points occur mostly at extreme rally lengths? No\n\n# 3) Shot type (stacked count; black part = influential)\nggplot(final_stroke_data, aes(x = shot_type, fill = is_inf)) +\n  geom_bar() +\n  scale_fill_manual(values = c(`FALSE` = \"grey80\", `TRUE` = \"black\"),\n                    labels = c(\"All\", \"Influential\")) +\n  labs(x = \"Shot type\", y = \"Count\", fill = NULL,\n       title = \"Shot type distribution with influential highlighted\") +\n  coord_flip() +\n  theme_minimal()\n#Are influential points mostly a rare shot type? Nope\n\n# 4) chou_shuttle_paral (histogram + rug for influential)\nggplot(final_stroke_data, aes(x = chou_shuttle_paral)) +\n  geom_histogram(bins = 30, fill = \"grey80\", color = \"white\") +\n  geom_rug(data = subset(final_stroke_data, is_inf),\n           aes(x = chou_shuttle_paral), sides = \"b\") +\n  labs(x = \"chou_shuttle_paral\", y = \"Count\",\n       title = \"chou_shuttle_paral distribution with influential rug\") +\n  theme_minimal()\n# Are influential points in the extreme tails of the distribution? Nope\n# influential points are not extreme or errenous points must be rare combination of factors\n\nfinal_stroke_data_no_inf &lt;- final_stroke_data[-index_inf, ]\nnull_model_no_inf &lt;- glm(\n  chou_win ~ 1,\n  data = final_stroke_data_no_inf,\n  family = binomial(link = \"logit\")\n)\n# fit a full model\nfull_model_no_inf &lt;- glm(\n  chou_win ~ year + tournament + opponent + set + rally_phase + rally_length + \n    shot_type + backhand + chou_opp_dist + \n    chou_shuttle_paral + chou_shuttle_perp,\n  data = final_stroke_data_no_inf,\n  family = binomial(link = \"logit\")\n)\n\nstep_model_no_inf &lt;- step(\n  null_model_no_inf,\n  scope = list(lower = null_model_no_inf, upper = full_model_no_inf),\n  direction = \"both\",\n  trace = TRUE          \n)\n\n\nStart:  AIC=504\nchou_win ~ 1\n\n                     Df Deviance    AIC\n+ shot_type          11   273.13 297.13\n+ chou_shuttle_paral  1   406.88 410.88\n+ backhand            1   447.82 451.82\n+ chou_opp_dist       1   482.05 486.05\n+ opponent            4   491.65 501.65\n+ set                 2   497.07 503.07\n&lt;none&gt;                    502.00 504.00\n+ chou_shuttle_perp   1   500.13 504.13\n+ year                1   500.73 504.73\n+ tournament          6   491.39 505.39\n+ rally_length        1   501.41 505.41\n+ rally_phase         2   500.25 506.25\n\nStep:  AIC=297.13\nchou_win ~ shot_type\n\n                     Df Deviance    AIC\n+ chou_shuttle_paral  1   245.80 271.80\n+ opponent            4   249.53 281.53\n+ tournament          6   255.00 291.00\n+ year                1   267.05 293.05\n&lt;none&gt;                    273.13 297.13\n+ backhand            1   271.44 297.44\n+ rally_length        1   272.31 298.31\n+ chou_opp_dist       1   272.47 298.47\n+ chou_shuttle_perp   1   273.07 299.07\n+ set                 2   272.20 300.20\n+ rally_phase         2   272.68 300.68\n- shot_type          11   502.00 504.00\n\nStep:  AIC=271.8\nchou_win ~ shot_type + chou_shuttle_paral\n\n                     Df Deviance    AIC\n+ opponent            4   221.43 255.43\n+ tournament          6   224.94 262.94\n+ year                1   237.74 265.74\n+ chou_opp_dist       1   243.19 271.19\n&lt;none&gt;                    245.80 271.80\n+ rally_length        1   243.80 271.80\n+ set                 2   243.13 273.13\n+ backhand            1   245.39 273.39\n+ chou_shuttle_perp   1   245.80 273.80\n+ rally_phase         2   245.03 275.03\n- chou_shuttle_paral  1   273.13 297.13\n- shot_type          11   406.88 410.88\n\nStep:  AIC=255.43\nchou_win ~ shot_type + chou_shuttle_paral + opponent\n\n                     Df Deviance    AIC\n+ rally_length        1   216.04 252.04\n&lt;none&gt;                    221.43 255.43\n+ chou_opp_dist       1   220.77 256.77\n+ year                1   220.85 256.85\n+ chou_shuttle_perp   1   221.37 257.37\n+ backhand            1   221.42 257.42\n+ set                 2   219.72 257.72\n+ tournament          5   214.06 258.06\n+ rally_phase         2   220.57 258.57\n- opponent            4   245.80 271.80\n- chou_shuttle_paral  1   249.53 281.53\n- shot_type          11   386.48 398.48\n\nStep:  AIC=252.04\nchou_win ~ shot_type + chou_shuttle_paral + opponent + rally_length\n\n                     Df Deviance    AIC\n&lt;none&gt;                    216.04 252.04\n+ tournament          5   207.20 253.20\n+ chou_opp_dist       1   215.41 253.41\n+ year                1   215.60 253.60\n+ backhand            1   216.04 254.04\n+ chou_shuttle_perp   1   216.04 254.04\n+ set                 2   214.48 254.48\n+ rally_phase         2   215.13 255.13\n- rally_length        1   221.43 255.43\n- opponent            4   243.80 271.80\n- chou_shuttle_paral  1   246.74 280.74\n- shot_type          11   383.98 397.98\n\n\nCode\nsummary(step_model_no_inf)\n\n\n\nCall:\nglm(formula = chou_win ~ shot_type + chou_shuttle_paral + opponent + \n    rally_length, family = binomial(link = \"logit\"), data = final_stroke_data_no_inf)\n\nCoefficients:\n                                Estimate Std. Error z value Pr(&gt;|z|)    \n(Intercept)                   -7.466e+00  1.852e+00  -4.032 5.53e-05 ***\nshot_typecross-court net shot  5.717e+00  1.370e+00   4.173 3.00e-05 ***\nshot_typedrive                 1.259e+00  1.520e+00   0.829  0.40736    \nshot_typedrop                  2.754e+00  1.502e+00   1.833  0.06674 .  \nshot_typelob                   1.343e+00  1.027e+00   1.308  0.19098    \nshot_typenet shot             -1.283e+01  1.302e+03  -0.010  0.99214    \nshot_typeother                 3.487e+00  1.072e+00   3.253  0.00114 ** \nshot_typepush                 -1.563e+01  2.489e+03  -0.006  0.99499    \nshot_typereturn net            2.798e+00  1.224e+00   2.286  0.02228 *  \nshot_typerush                  6.962e+00  1.272e+00   5.472 4.45e-08 ***\nshot_typesmash                 4.610e+00  8.324e-01   5.539 3.05e-08 ***\nshot_typewrist smash           2.363e+01  3.127e+03   0.008  0.99397    \nchou_shuttle_paral             1.132e-02  2.365e-03   4.788 1.68e-06 ***\nopponentCHEN Long             -1.614e+00  1.112e+00  -1.452  0.14658    \nopponentJonatan CHRISTIE       4.806e-01  1.117e+00   0.430  0.66705    \nopponentKento MOMOTA          -2.160e+00  1.061e+00  -2.036  0.04179 *  \nopponentNG Ka Long Angus      -1.074e+00  1.367e+00  -0.786  0.43211    \nrally_length                   4.947e-02  2.189e-02   2.260  0.02383 *  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 502.00  on 381  degrees of freedom\nResidual deviance: 216.04  on 364  degrees of freedom\nAIC: 252.04\n\nNumber of Fisher Scoring iterations: 18\n\n\nCode\n# Both models still keep shot_type, chou_shuttle_paral, opponent, and rally_length\n# shot_type now have huge SEs\n# will not be removing influential points!\n\n\ntrain_preds &lt;- predict(step_model_int, type = \"response\")\n\n# ROC curve & AUC\nroc_obj &lt;- roc(final_stroke_data$chou_win, train_preds)\n\n\nSetting levels: control = loss, case = win\nSetting direction: controls &lt; cases\n\n\nCode\nplot(roc_obj, col = \"blue\", main = \"ROC Curve - Training Data\")\nauc(roc_obj) \n\n\nArea under the curve: 0.8823\n\n\nCode\n# excellent!!\n\nlibrary(caret)\n\n\nLoading required package: lattice\n\nAttaching package: 'caret'\n\nThe following object is masked from 'package:purrr':\n\n    lift\n\n\nCode\nset.seed(123)\ntrain_control &lt;- trainControl(method = \"cv\", number = 5, \n                              classProbs = TRUE, \n                              summaryFunction = twoClassSummary)\n\ncv_model &lt;- train(\n  formula(step_model_int), \n  data = final_stroke_data,\n  method = \"glm\",\n  family = binomial,\n  trControl = train_control,\n  metric = \"ROC\"\n)\n\ncv_model\n\n\nGeneralized Linear Model \n\n409 samples\n  4 predictor\n  2 classes: 'loss', 'win' \n\nNo pre-processing\nResampling: Cross-Validated (5 fold) \nSummary of sample sizes: 327, 328, 327, 328, 326 \nResampling results:\n\n  ROC      Sens       Spec     \n  0.86399  0.8494118  0.7570565\n\n\nCode\n#should've left out some matches for testing",
    "crumbs": [
      "<span class='chapter-number'>7</span>  <span class='chapter-title'>Model</span>"
    ]
  },
  {
    "objectID": "07-communicate.html",
    "href": "07-communicate.html",
    "title": "8  Communicate",
    "section": "",
    "text": "hi",
    "crumbs": [
      "<span class='chapter-number'>8</span>  <span class='chapter-title'>Communicate</span>"
    ]
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "9  References",
    "section": "",
    "text": "RStudio. (n.d.). Using renv with Docker. Retrieved from https://rstudio.github.io/renv/articles/docker.html\nOpenAI. (2025). ChatGPT conversation share link. Retrieved from https://chatgpt.com/c/689d23ee-0338-8329-a369-c7211e3d9364\nPosit Community Forum. (2025). Vetiver problem with Docker. Retrieved from https://forum.posit.co/t/vetiver-problem-with-docker/177789\nNature. (2025). Article in Scientific Data. https://www.nature.com/articles/s41597-025-04505-y\nArXiv. (2022). Title: TBD. Retrieved from https://arxiv.org/abs/2207.14124\nResearchGate. (2024). Engineering Features from Raw Sensor Data to Analyse Player Movements during Competition. https://www.researchgate.net/publication/378318969_Engineering_Features_from_Raw_Sensor_Data_to_Analyse_Player_Movements_during_Competition\nResearchGate. (2009). Multicollinearity in regression models with multiple distance measures. https://www.researchgate.net/publication/229748502_Multicolinearity_in_regression_models_with_multiple_distance_measures\nDataCamp. (n.d.). Variance Inflation Factor. Retrieved from https://www.datacamp.com/tutorial/variance-inflation-factor\nOpenAI. (2025). ChatGPT conversation share link. Retrieved from https://chatgpt.com/c/689cf8c9-a570-8327-bbab-c76401976cb0\nUniversity of Waterloo. (n.d.). Logistic Regression with R. Retrieved from https://uwaterloo.ca/statistical-consulting-survey-research-unit/sites/default/files/uploads/documents/logistic_regression_with_r.pdf\nPosit. (n.d.). Vetiver: Deploy with Docker. Retrieved from https://vetiver.posit.co/learn-more/deploy-with-docker.html\nPenn State University. (n.d.). STAT 462: Logistic Regression. Retrieved from https://online.stat.psu.edu/stat462/node/173/\nTechnical University of Munich. (n.d.). Lecture 5 Notes. Retrieved from https://www.math.cit.tum.de/fileadmin/w00ccg/math/Forschung/forschungsgruppen/statistics/academics/lec5.pdf\nPosit. (n.d.). Deploy with Docker: Create a Vetiver Model. Retrieved from https://vetiver.posit.co/learn-more/deploy-with-docker.html#create-a-vetiver-model\nPosit. (n.d.). Share your Shiny app. Retrieved from https://shiny.posit.co/r/articles/share/shinyapps/\nAWS. (n.d.). AWS Management Console. Retrieved from https://us-east-2.console.aws.amazon.com/console/home?nc2=h_uta_mc&region=us-east-2\nPosit. (n.d.). Shiny layout guide. Retrieved from https://shiny.posit.co/r/articles/build/layout-guide/\nOlympics.com. (n.d.). Badminton court size, dimensions, and measurements. Retrieved from https://www.olympics.com/en/news/badminton-court-size-dimension-measurement-length-width-net-height-service-line\nOpenAI. (2025). ChatGPT conversation share link. Retrieved from https://chatgpt.com/share/689d5c38-64f8-8001-8ceb-52d47fbbe0a4",
    "crumbs": [
      "<span class='chapter-number'>9</span>  <span class='chapter-title'>References</span>"
    ]
  }
]